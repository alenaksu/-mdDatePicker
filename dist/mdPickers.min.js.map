{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","currentDate","$mdMedia","$timeout","self","this","currentMoment","moment","selectingYear","yearItems","currentIndex_","PAGE_SIZE","START","getItemAtIndex","index","getLength","Math","floor","year","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","angular","noop","then","CalendarCtrl","weekDays","weekdaysMin","getDaysInMonth","days","daysInMonth","firstDay","date","day","arr","i","push","selectDate","dom","closeAfter","datePickerCtrl","nextMonth","add","prevMonth","subtract","init","TimePickerCtrl","VIEW_HOURS","VIEW_MINUTES","currentView","clockHours","parseInt","format","clockMinutes","minutes","$watch","newValue","oldValue","isDefined","hour","setAM","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","ngModel","STEP_DEG","steps","selected","CLOCK_TYPES","hours","range","setTimeByDeg","deg","divider","type","setTime","round","autoSwitch","timePickerCtrl","getPointerStyle","degrees","-webkit-transform","-ms-transform","transform","time","$setViewValue","$render","$modelValue","module","provider","LABEL_OK","LABEL_CANCEL","DATE_FORMAT","setOKButtonLabel","label","setCancelButtonLabel","setDateFormat","$get","show","targetEvent","isDate","Date","now","controller","controllerAs","clickOutsideToClose","template","locals","getDateFormat","directive","$animate","restrict","scope","link","element","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","mdpDatePickerFormat","on","ev","preventDefault","selectedDate","replace","ctrls","onEvent","event","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","off","$on","AUTO_SWITCH","setAutoSwitch","boolean","$mdpTimePicker"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\nvar module = angular.module(\"mdPickers\", [\r\n\t\"ngMaterial\",\r\n\t\"ngAnimate\",\r\n\t\"ngAria\"\r\n]); \n/* global = */\r\n\r\nfunction DatePickerCtrl($scope, $mdDialog, currentDate, $mdMedia, $timeout) {\r\n    var self = this;\r\n\r\n    this.currentDate = currentDate;\r\n    this.currentMoment = moment(self.currentDate);\r\n    this.selectingYear = false;\r\n\r\n    $scope.$mdMedia = $mdMedia;\r\n    this.yearItems = {\r\n        currentIndex_: 0,\r\n        PAGE_SIZE: 5,\r\n        START: 1900,\r\n        getItemAtIndex: function(index) {\r\n            if(this.currentIndex_ < index)\r\n                this.currentIndex_ = index;\r\n            return this.START + index;\r\n        },\r\n        getLength: function() {\r\n            return this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2);\r\n        }\r\n    }\r\n\r\n    $scope.year = this.currentMoment.year();\r\n\r\n\tthis.selectYear = function(year) {\r\n        self.currentMoment.year(year);\r\n        $scope.year = year;\r\n        self.selectingYear = false;\r\n        self.animate();\r\n    };\r\n\r\n    this.showYear = function() {\r\n        self.yearTopIndex = (self.currentMoment.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\r\n        self.yearItems.currentIndex_ = (self.currentMoment.year() - self.yearItems.START) + 1;\r\n        self.selectingYear = true;\r\n    };\r\n\r\n    this.showCalendar = function() {\r\n        self.selectingYear = false;\r\n    };\r\n\r\n    this.cancel = function() {\r\n        $mdDialog.cancel();\r\n    };\r\n\r\n    this.confirm = function() {\r\n        $mdDialog.hide(this.currentMoment.toDate());\r\n    };\r\n\r\n    this.animate = function() {\r\n        self.animating = true;\r\n        $timeout(angular.noop).then(function() {\r\n            self.animating = false;\r\n        })\r\n    };\r\n}\r\n\r\nmodule.provider(\"$mdpDatePicker\", function() {\r\n    var LABEL_OK = \"ok\",\r\n        LABEL_CANCEL = \"cancel\",\r\n        DATE_FORMAT = 'YYYY-MM-DD';\r\n\r\n    this.setOKButtonLabel = function(label) {\r\n        LABEL_OK = label;\r\n    };\r\n\r\n    this.setCancelButtonLabel = function(label) {\r\n        LABEL_CANCEL = label;\r\n    };\r\n\r\n    this.setDateFormat = function (format) {\r\n        DATE_FORMAT = format;\r\n    };\r\n\r\n    this.$get = [\"$mdDialog\", function($mdDialog) {\r\n        var provider = {\r\n            show: function(targetEvent, currentDate) {\r\n                if(!angular.isDate(currentDate)) currentDate = Date.now();\r\n\r\n                return $mdDialog.show({\r\n                    controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', '$timeout', DatePickerCtrl],\r\n                    controllerAs: 'datepicker',\r\n                    clickOutsideToClose: true,\r\n                    template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\r\n                                '<md-dialog-content layout=\"row\" layout-wrap>' +\r\n                                    '<div layout=\"column\" layout-align=\"start center\">' +\r\n                                        '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-primary\" layout=\"column\">' +\r\n                                            '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\\'YYYY\\') }}</span>' +\r\n                                            '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\"ddd, MMM DD\") }}</span> ' +\r\n                                        '</md-toolbar>' +\r\n                                    '</div>' +\r\n                                    '<div>' +\r\n                                        '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" ng-if=\"datepicker.selectingYear\">' +\r\n                                            '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\r\n                                                '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\r\n                                                    '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\r\n                                                '</div>' +\r\n                                            '</md-virtual-repeat-container>' +\r\n                                        '</div>' +\r\n                                        '<mdp-calendar date-picker-ctrl=\"datepicker\" ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.currentMoment\"></mdp-calendar>' +\r\n                                        '<md-dialog-actions layout-align=\"end center\" layout=\"row\">' +\r\n                                            '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\r\n                                            '<md-button ng-click=\"datepicker.confirm()\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\r\n                                        '</md-dialog-actions>' +\r\n                                    '</div>' +\r\n                                '</md-dialog-content>' +\r\n                            '</md-dialog>',\r\n                    targetEvent: targetEvent,\r\n                    locals: {\r\n                        currentDate: currentDate\r\n                    }\r\n                });\r\n            },\r\n            getDateFormat: function () {\r\n                return DATE_FORMAT;\r\n            }\r\n        }\r\n\r\n        return provider;\r\n    }];\r\n});\r\n\r\nfunction CalendarCtrl($scope) {\r\n    var self = this;\r\n    this.currentMoment;\r\n    this.weekDays = moment.weekdaysMin();\r\n\r\n    this.getDaysInMonth = function() {\r\n        var days = self.currentMoment.daysInMonth(),\r\n            firstDay = moment(self.currentMoment).date(1).day();\r\n\r\n        var arr = [];\r\n        for(var i = 1; i <= (firstDay + days); i++)\r\n            arr.push(i > firstDay ? (i - firstDay) : false);\r\n\r\n        return arr;\r\n    };\r\n\r\n    this.selectDate = function(dom, closeAfter) {\r\n        self.currentMoment.date(dom);\r\n        if (closeAfter && self.datePickerCtrl) {\r\n            self.datePickerCtrl.confirm();\r\n        }\r\n    };\r\n\r\n    this.nextMonth = function() {\r\n        self.currentMoment.add(1, 'months');\r\n    };\r\n\r\n    this.prevMonth = function() {\r\n        self.currentMoment.subtract(1, 'months');\r\n    };\r\n\r\n    this.init = function(date, datePickerCtrl) {\r\n        self.currentMoment = date;\r\n        self.datePickerCtrl = datePickerCtrl;\r\n    };\r\n}\r\n\r\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            \"date\": \"=\",\r\n            \"datePickerCtrl\": \"=\"\r\n        },\r\n        template: '<div class=\"mdp-calendar\">' +\r\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\r\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_left </md-icon></md-button>' +\r\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.currentMoment.format(\"MMMM YYYY\") }}</div>' +\r\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_right </md-icon></md-button>' +\r\n                    '</div>' +\r\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\r\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\r\n                    '</div>' +\r\n                    '<div layout=\"row\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\">' +\r\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"n in calendar.getDaysInMonth() track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': n === false }\">' +\r\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"select day\" ng-if=\"n !== false\" ng-class=\"{\\'md-primary\\': calendar.currentMoment.date() == n}\" ng-click=\"calendar.selectDate(n)\" ng-dblclick=\"calendar.selectDate(n, true)\">{{ n }}</md-button>' +\r\n                        '</div>' +\r\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\r\n                    '</div>' +\r\n                '</div>',\r\n        controller: [\"$scope\", CalendarCtrl],\r\n        controllerAs: \"calendar\",\r\n        link: function(scope, element, attrs, ctrl) {\r\n            var animElements = [\r\n                element[0].querySelector(\".mdp-calendar-week-days\"),\r\n                element[0].querySelector('.mdp-calendar-days'),\r\n                element[0].querySelector('.mdp-calendar-monthyear')\r\n            ];\r\n            animElements = animElements.map(function(a) {\r\n               return angular.element(a);\r\n            });\r\n\r\n            ctrl.init(scope.date, scope.datePickerCtrl);\r\n\r\n            scope.$watch(function() { return  scope.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\r\n                var direction = null;\r\n\r\n                if(newValue > oldValue)\r\n                    direction = \"mdp-animate-next\";\r\n                else if(newValue < oldValue)\r\n                    direction = \"mdp-animate-prev\";\r\n\r\n                if(direction) {\r\n                    for(var i in animElements) {\r\n                        animElements[i].addClass(direction);\r\n                        $animate.removeClass(animElements[i], direction);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\r\n    return  {\r\n        restrict: 'A',\r\n        require: '?ngModel',\r\n        link: function(scope, element, attrs, ngModel) {\r\n            if (!ngModel) {\r\n                return;\r\n            }\r\n            var format = 'undefined' !== typeof attrs.mdpDatePickerFormat ? attrs.mdpDatePickerFormat : $mdpDatePicker.getDateFormat();\r\n            angular.element(element).on(\"click\", function(ev) {\r\n                ev.preventDefault();\r\n                $mdpDatePicker.show(ev, moment(ngModel.$modelValue, format).toDate()).then(function(selectedDate) {\r\n                    $timeout(function() {\r\n                        ngModel.$setViewValue(moment(selectedDate).format(format));\r\n                        ngModel.$render();\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    };\r\n}]);\nfunction TimePickerCtrl($scope, $mdDialog, currentDate, $mdMedia) {\r\n\tvar self = this;\r\n    this.VIEW_HOURS = 1;\r\n    this.VIEW_MINUTES = 2;\r\n    this.currentDate = currentDate;\r\n    this.currentView = this.VIEW_HOURS;\r\n    this.currentMoment = moment(self.currentDate);\r\n\r\n    this.clockHours = parseInt(this.currentMoment.format(\"h\"));\r\n    this.clockMinutes = parseInt(this.currentMoment.minutes());\r\n\r\n    $scope.$watch(function() { return self.clockHours }, function(newValue, oldValue) {\r\n        if(angular.isDefined(oldValue)) {\r\n            if(self.currentMoment.format(\"A\") == \"AM\")\r\n                self.currentMoment.hour(self.clockHours);\r\n            else\r\n                self.currentMoment.hour(self.clockHours < 12 ? self.clockHours + 12 : self.clockHours);\r\n        }\r\n    });\r\n\r\n     $scope.$watch(function() { return self.clockMinutes }, function(newValue, oldValue) {\r\n        if(angular.isDefined(oldValue)) {\r\n            self.currentMoment.minutes(newValue < 60 ? newValue : 0);\r\n        }\r\n    });\r\n\r\n\t$scope.$mdMedia = $mdMedia;\r\n\r\n\tthis.setAM = function() {\r\n        if(self.currentMoment.format(\"A\") == \"PM\")\r\n            self.currentMoment.hour(self.currentMoment.hour() - 12);\r\n\t};\r\n\r\n    this.setPM = function() {\r\n        if(self.currentMoment.format(\"A\") == \"AM\")\r\n            self.currentMoment.hour(self.currentMoment.hour() + 12);\r\n\t};\r\n\r\n    this.cancel = function() {\r\n        $mdDialog.cancel();\r\n    };\r\n\r\n    this.confirm = function() {\r\n        $mdDialog.hide(this.currentMoment.toDate());\r\n    };\r\n}\r\n\r\nfunction ClockCtrl($scope) {\r\n    var TYPE_HOURS = \"hours\";\r\n    var TYPE_MINUTES = \"minutes\";\r\n    this.ngModel;\r\n\r\n    this.STEP_DEG = 360 / 12;\r\n    var self = this;\r\n    this.steps = [];\r\n    this.selected = 0;\r\n\r\n    this.CLOCK_TYPES = {\r\n        \"hours\": {\r\n            range: 12,\r\n        },\r\n        \"minutes\": {\r\n            range: 60,\r\n        }\r\n    }\r\n\r\n    this.setTimeByDeg = function(deg) {\r\n        deg = deg >= 360 ? 0 : deg;\r\n        var divider = 0;\r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                divider = 12;\r\n                break;\r\n            case TYPE_MINUTES:\r\n                divider = 60;\r\n                break;\r\n        }\r\n\r\n        self.setTime(\r\n            Math.round(divider / 360 * deg)\r\n        );\r\n\r\n        if (TYPE_HOURS === self.type && self.autoSwitch) {\r\n            self.timePickerCtrl.currentView = self.timePickerCtrl.VIEW_MINUTES;\r\n        }\r\n    };\r\n\r\n    this.getPointerStyle = function() {\r\n        var divider = 1;\r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                divider = 12;\r\n                break;\r\n            case TYPE_MINUTES:\r\n                divider = 60;\r\n                break;\r\n        }\r\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\r\n        return {\r\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\r\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\r\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\r\n        }\r\n    };\r\n\r\n    this.setTime = function(time) {\r\n        this.selected = time;\r\n        self.ngModel.$setViewValue(time);\r\n        self.ngModel.$render();\r\n    };\r\n\r\n    this.init = function(ngModel, type, timePickerCtrl, autoSwitch) {\r\n        self.type = type;\r\n        self.timePickerCtrl = timePickerCtrl;\r\n        self.autoSwitch = autoSwitch;\r\n        switch(type) {\r\n            case TYPE_HOURS:\r\n                for(var i = 1; i <= 12; i++)\r\n                    self.steps.push(i);\r\n\r\n                break;\r\n            case TYPE_MINUTES:\r\n                for(var i = 5; i <= 55; i+=5)\r\n                    self.steps.push(i);\r\n                self.steps.push(0);\r\n\r\n                break;\r\n\r\n        }\r\n\r\n        self.ngModel = ngModel;\r\n        self.selected = self.ngModel.$modelValue || 0;\r\n    };\r\n}\r\n\r\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        require: ['mdpClock', 'ngModel'],\r\n        scope: {\r\n            'type': '@?',\r\n            'timePickerCtrl': '=',\r\n            'autoSwitch': '='\r\n        },\r\n        replace: true,\r\n        template: '<div class=\"mdp-clock\">' +\r\n                        '<div class=\"mdp-clock-container\">' +\r\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\r\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\r\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\r\n                            '</md-toolbar>' +\r\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\r\n                        '</div>' +\r\n                    '</div>',\r\n        controller: [\"$scope\", ClockCtrl],\r\n        controllerAs: \"clock\",\r\n        link: function(scope, element, attrs, ctrls) {\r\n            var ctrl = ctrls[0],\r\n                ngModel = ctrls[1];\r\n\r\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\"));\r\n\r\n            scope.type = scope.type || \"hours\";\r\n            $timeout(function() {\r\n                ctrl.init(ngModel, scope.type, scope.timePickerCtrl, scope.autoSwitch);\r\n            });\r\n\r\n            var onEvent = function(event) {\r\n                var containerCoords = event.currentTarget.getClientRects()[0];\r\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\r\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\r\n\r\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\r\n                $timeout(function() {\r\n                    ctrl.setTimeByDeg(deg + 180);\r\n                });\r\n            };\r\n\r\n            element.on(\"mousedown\", function() {\r\n               element.on(\"mousemove\", onEvent);\r\n            });\r\n\r\n            element.on(\"mouseup mouseleave\", function() {\r\n               element.off(\"mousemove\", onEvent);\r\n            });\r\n\r\n            element.on(\"click\", onEvent);\r\n            scope.$on(\"$destroy\", function() {\r\n                element.off(\"click\", onEvent);\r\n                element.off(\"mousemove\", onEvent);\r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\nmodule.provider(\"$mdpTimePicker\", function() {\r\n    var LABEL_OK = \"ok\",\r\n        LABEL_CANCEL = \"cancel\",\r\n        AUTO_SWITCH = false;\r\n\r\n    this.setOKButtonLabel = function(label) {\r\n        LABEL_OK = label;\r\n    };\r\n\r\n    this.setCancelButtonLabel = function(label) {\r\n        LABEL_CANCEL = label;\r\n    };\r\n\r\n    this.setAutoSwitch = function(boolean) {\r\n        AUTO_SWITCH = boolean;\r\n    };\r\n\r\n    this.$get = [\"$mdDialog\", function($mdDialog) {\r\n        var provider = {\r\n            show: function(targetEvent, currentDate) {\r\n                if(!angular.isDate(currentDate)) currentDate = Date.now();\r\n\r\n                return $mdDialog.show({\r\n                    controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', TimePickerCtrl],\r\n                    controllerAs: 'timepicker',\r\n                    clickOutsideToClose: true,\r\n                    template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\r\n                                '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\r\n                                    '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-primary\">' +\r\n                                        '<div class=\"mdp-timepicker-selected-time\">' +\r\n                                            '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.currentMoment.format(\"h\") }}</span>:' +\r\n                                            '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.currentMoment.format(\"mm\") }}</span>' +\r\n                                        '</div>' +\r\n                                        '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' +\r\n                                            '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'AM\\' }\">AM</span>' +\r\n                                            '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'PM\\' }\">PM</span>' +\r\n                                        '</div>' +\r\n                                    '</md-toolbar>' +\r\n                                    '<div>' +\r\n                                        '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\r\n                                           '<mdp-clock auto-switch=\"' + AUTO_SWITCH + '\" time-picker-ctrl=\"timepicker\" class=\"mdp-animation-zoom\" ng-model=\"timepicker.clockHours\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\r\n                                           '<mdp-clock auto-switch=\"' + AUTO_SWITCH + '\" time-picker-ctrl=\"timepicker\" class=\"mdp-animation-zoom\" ng-model=\"timepicker.clockMinutes\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\r\n                                        '</div>' +\r\n\r\n                                        '<md-dialog-actions layout-align=\"end center\" layout=\"row\">' +\r\n                                            '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\r\n                                            '<md-button ng-click=\"timepicker.confirm()\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\r\n                                        '</md-dialog-actions>' +\r\n                                    '</div>' +\r\n                                '</md-dialog-content>' +\r\n                            '</md-dialog>',\r\n                    targetEvent: targetEvent,\r\n                    locals: {\r\n                        currentDate: currentDate\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        return provider;\r\n    }];\r\n});\r\n\r\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        require: '?ngModel',\r\n        link: function(scope, element, attrs, ngModel) {\r\n            if ('undefined' !== typeof attrs.type && 'time' === attrs.type && ngModel) {\r\n                angular.element(element).on(\"click\", function(ev) {\r\n                    ev.preventDefault();\r\n                    $mdpTimePicker.show(ev, ngModel.$modelValue).then(function(selectedDate) {\r\n                        $timeout(function() {\r\n                            ngModel.$setViewValue(moment(selectedDate).format(\"HH:mm\"));\r\n                            ngModel.$render();\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    };\r\n}]);\r\n\n})();"],"sourceRoot":"/source/"}