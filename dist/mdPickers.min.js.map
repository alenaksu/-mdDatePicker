{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","options","self","this","date","moment","minDate","isValid","maxDate","dateFilter","angular","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","noop","then","CalendarCtrl","weekDays","weekdaysMin","daysInMonth","getDaysInMonth","days","firstDay","day","arr","i","value","enabled","isDayEnabled","push","selectDate","dom","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","TimePickerCtrl","VIEW_HOURS","VIEW_MINUTES","currentView","time","clockHours","parseInt","format","clockMinutes","minutes","switchView","setAM","locale","hour","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","hours","range","getPointerStyle","divider","type","degrees","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","init","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","provider","LABEL_OK","LABEL_CANCEL","setOKButtonLabel","label","setCancelButtonLabel","$get","datePicker","isDate","Date","now","isObject","show","controller","controllerAs","clickOutsideToClose","template","targetEvent","locals","directive","$animate","restrict","bindToController","link","scope","element","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","dateFormat","ngModel","defaultFormat","on","ev","preventDefault","$modelValue","selectedDate","$setViewValue","$render","replace","timepickerCtrl","$parent","timepicker","onEvent","event","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","e","off","$on","timePicker","$mdpTimePicker","timeFormat"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\r\n\r\nvar module = angular.module(\"mdPickers\", [\r\n\t\"ngMaterial\",\r\n\t\"ngAnimate\",\r\n\t\"ngAria\"\r\n]);\r\n\r\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\r\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\r\n\t\t$mdIconProvider.icon(icon.id, icon.url);\r\n\t});\r\n}]);\r\n\r\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\r\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\r\n\t\t$templateCache.put(icon.url, icon.svg);\r\n\t});\r\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\r\n    {\r\n        id: 'mdp-chevron-left',\r\n        url: 'mdp-chevron-left.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-chevron-right',\r\n        url: 'mdp-chevron-right.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    }\r\n]);\n/* global moment, angular */\r\n\r\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\r\n    var self = this;\r\n\r\n    this.date = moment(currentDate);\r\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\r\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\r\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\r\n    this.selectingYear = false;\r\n    \r\n    // validate min and max date\r\n\tif (this.minDate && this.maxDate) {\r\n\t\tif (this.maxDate.isBefore(this.minDate)) {\r\n\t\t\tthis.maxDate = moment(this.minDate).add(1, 'days');\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (this.date) {\r\n\t\t// check min date\r\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\r\n\t\t\tthis.date = moment(this.minDate);\r\n    \t}\r\n    \t\r\n    \t// check max date\r\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n\t\t\tthis.date = moment(this.maxDate);\r\n    \t}\r\n\t}\r\n\t\r\n\tthis.yearItems = {\r\n        currentIndex_: 0,\r\n        PAGE_SIZE: 5,\r\n        START: (self.minDate ? self.minDate.year() : 1900),\r\n        END: (self.maxDate ? self.maxDate.year() : 0),\r\n        getItemAtIndex: function(index) {\r\n        \tif(this.currentIndex_ < index)\r\n                this.currentIndex_ = index;\r\n        \t\r\n        \treturn this.START + index;\r\n        },\r\n        getLength: function() {\r\n            return Math.min(\r\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\r\n                Math.abs(this.START - this.END) + 1\r\n            );\r\n        }\r\n    };\r\n\r\n    $scope.$mdMedia = $mdMedia;\r\n    $scope.year = this.date.year();\r\n\r\n\tthis.selectYear = function(year) {\r\n        self.date.year(year);\r\n        $scope.year = year;\r\n        self.selectingYear = false;\r\n        self.animate();\r\n    };\r\n    \r\n    this.showYear = function() { \r\n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\r\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\r\n        self.selectingYear = true;\r\n    };\r\n    \r\n    this.showCalendar = function() {\r\n        self.selectingYear = false;\r\n    };\r\n\r\n    this.cancel = function() {\r\n        $mdDialog.cancel();\r\n    };\r\n\r\n    this.confirm = function() {\r\n    \tvar date = this.date;\r\n    \t\r\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\r\n    \t\tdate = moment(this.minDate);\r\n    \t}\r\n    \t\r\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n    \t\tdate = moment(this.maxDate);\r\n    \t}  \t\r\n    \t\r\n        $mdDialog.hide(date.toDate());\r\n    };\r\n    \r\n    this.animate = function() {\r\n        self.animating = true;\r\n        $timeout(angular.noop).then(function() {\r\n            self.animating = false;\r\n        })  \r\n    };\r\n}\r\n\r\nmodule.provider(\"$mdpDatePicker\", function() {\r\n    var LABEL_OK = \"OK\",\r\n        LABEL_CANCEL = \"Cancel\";\r\n        \r\n    this.setOKButtonLabel = function(label) {\r\n        LABEL_OK = label;\r\n    };\r\n    \r\n    this.setCancelButtonLabel = function(label) {\r\n        LABEL_CANCEL = label;\r\n    };\r\n    \r\n    this.$get = [\"$mdDialog\", function($mdDialog) {\r\n        var datePicker = function(currentDate, options) {\r\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\r\n            if (!angular.isObject(options)) options = {};\r\n    \r\n            return $mdDialog.show({\r\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\r\n                controllerAs: 'datepicker',\r\n                clickOutsideToClose: true,\r\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\r\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\r\n                                '<div layout=\"column\" layout-align=\"start center\">' +\r\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\r\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\r\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(\"ddd, MMM DD\") }}</span> ' +\r\n                                    '</md-toolbar>' + \r\n                                '</div>' +  \r\n                                '<div>' + \r\n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\r\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\r\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\r\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\r\n                                            '</div>' +\r\n                                        '</md-virtual-repeat-container>' +\r\n                                    '</div>' +\r\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\r\n                                    '<md-dialog-actions layout=\"row\">' +\r\n                                    \t'<span flex></span>' +\r\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\r\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\r\n                                    '</md-dialog-actions>' +\r\n                                '</div>' +\r\n                            '</md-dialog-content>' +\r\n                        '</md-dialog>',\r\n                targetEvent: options.targetEvent,\r\n                locals: {\r\n                    currentDate: currentDate,\r\n                    options: options\r\n                }\r\n            });\r\n        };\r\n    \r\n        return datePicker;\r\n    }];\r\n});\r\n\r\nfunction CalendarCtrl($scope) {\r\n\tvar self = this;\r\n    this.weekDays = moment.weekdaysMin();\r\n    this.daysInMonth = [];\r\n    \r\n    this.getDaysInMonth = function() {\r\n        var days = self.date.daysInMonth(),\r\n            firstDay = moment(self.date).date(1).day();\r\n\r\n        var arr = [];\r\n        for(var i = 1; i <= (firstDay + days); i++) {\r\n            var day = null;\r\n            if(i > firstDay) {\r\n                day =  {\r\n                    value: (i - firstDay),\r\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\r\n                };\r\n            }\r\n            arr.push(day);\r\n        }\r\n \r\n        return arr;\r\n    };\r\n    \r\n    this.isDayEnabled = function(day) {\r\n        return (!this.minDate || this.minDate <= day) && \r\n            (!this.maxDate || this.maxDate >= day) && \r\n            (!self.dateFilter || !self.dateFilter(day));\r\n    };\r\n    \r\n    this.selectDate = function(dom) {\r\n        self.date.date(dom);\r\n    };\r\n\r\n    this.nextMonth = function() {\r\n        self.date.add(1, 'months');\r\n    };\r\n\r\n    this.prevMonth = function() {\r\n        self.date.subtract(1, 'months');\r\n    };\r\n    \r\n    this.updateDaysInMonth = function() {\r\n        self.daysInMonth = self.getDaysInMonth();\r\n    };\r\n    \r\n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\r\n        if(newValue && newValue !== oldValue)\r\n            self.updateDaysInMonth();\r\n    })\r\n    \r\n    self.updateDaysInMonth();\r\n}\r\n\r\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\r\n    return {\r\n        restrict: 'E',\r\n        bindToController: {\r\n            \"date\": \"=\",\r\n            \"minDate\": \"=\",\r\n            \"maxDate\": \"=\",\r\n            \"dateFilter\": \"=\"\r\n        },\r\n        template: '<div class=\"mdp-calendar\">' +\r\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\r\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\r\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\r\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\r\n                    '</div>' +\r\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\r\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\r\n                    '</div>' +\r\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\r\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\r\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\r\n                        '</div>' +\r\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\r\n                    '</div>' +\r\n                '</div>',\r\n        controller: [\"$scope\", CalendarCtrl],\r\n        controllerAs: \"calendar\",\r\n        link: function(scope, element, attrs, ctrl) {\r\n            var animElements = [\r\n                element[0].querySelector(\".mdp-calendar-week-days\"),\r\n                element[0].querySelector('.mdp-calendar-days'),\r\n                element[0].querySelector('.mdp-calendar-monthyear')\r\n            ].map(function(a) {\r\n               return angular.element(a); \r\n            });\r\n                \r\n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\r\n                var direction = null;\r\n                \r\n                if(newValue > oldValue)\r\n                    direction = \"mdp-animate-next\";\r\n                else if(newValue < oldValue)\r\n                    direction = \"mdp-animate-prev\";\r\n                \r\n                if(direction) {\r\n                    for(var i in animElements) {\r\n                        animElements[i].addClass(direction);\r\n                        $animate.removeClass(animElements[i], direction);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\r\n    return  {\r\n        restrict: 'A',\r\n        require: '?ngModel',\r\n        scope: {\r\n            \"minDate\": \"@min\",\r\n            \"maxDate\": \"@max\",\r\n            \"dateFilter\": \"=mdpDateFilter\",\r\n            \"dateFormat\": \"@mdpFormat\"\r\n        },\r\n        link: function(scope, element, attrs, ngModel) {\r\n            var dateFormat = scope.dateFormat || moment.defaultFormat;\r\n            if ('undefined' !== typeof attrs.type && ngModel) {\r\n                \r\n                angular.element(element).on(\"click\", function(ev) {\r\n                \tev.preventDefault();\r\n                \t\r\n                \t$mdpDatePicker(ngModel.$modelValue, {\r\n                \t    minDate: scope.minDate, \r\n                \t    maxDate: scope.maxDate,\r\n                \t    dateFilter: scope.dateFilter,\r\n                \t    targetEvent: ev\r\n            \t    }).then(function(selectedDate) {\r\n                \t\t$timeout(function() {\r\n                \t\t    switch(attrs.type) {\r\n                \t\t        case \"date\":\r\n                \t\t            ngModel.$setViewValue(moment(selectedDate).format(\"YYYY-MM-DD\"));\r\n                \t\t            break;\r\n            \t\t            default:\r\n            \t\t                ngModel.$setViewValue(moment(selectedDate).format(dateFormat));\r\n            \t\t                break;\r\n                \t\t    }\r\n                \t\t\t\r\n                \t\t\tngModel.$render(); \r\n                        });\r\n                      });\r\n                });\r\n            }\r\n        }\r\n    };\r\n}]);\n/* global moment, angular */\r\n\r\nfunction TimePickerCtrl($scope, $mdDialog, currentDate, $mdMedia) {\r\n\tvar self = this;\r\n    this.VIEW_HOURS = 1;\r\n    this.VIEW_MINUTES = 2;\r\n    this.currentDate = currentDate;\r\n    this.currentView = this.VIEW_HOURS;\r\n    this.time = moment(self.currentDate);\r\n    \r\n    this.clockHours = parseInt(this.time.format(\"h\"));\r\n    this.clockMinutes = parseInt(this.time.minutes());\r\n    \r\n\t$scope.$mdMedia = $mdMedia;\r\n\t\r\n\tthis.switchView = function() {\r\n\t    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\r\n\t};\r\n    \r\n\tthis.setAM = function() {\r\n        if(self.time.locale('en').format(\"A\") == \"PM\")\r\n            self.time.hour(self.time.hour() - 12);\r\n\t};\r\n    \r\n    this.setPM = function() {\r\n        if(self.time.locale('en').format(\"A\") == \"AM\")\r\n            self.time.hour(self.time.hour() + 12);\r\n\t};\r\n    \r\n    this.cancel = function() {\r\n        $mdDialog.cancel();\r\n    };\r\n\r\n    this.confirm = function() {\r\n        $mdDialog.hide(this.time.toDate());\r\n    };\r\n}\r\n\r\nfunction ClockCtrl($scope) {\r\n    var TYPE_HOURS = \"hours\";\r\n    var TYPE_MINUTES = \"minutes\";\r\n    var self = this;\r\n    \r\n    this.STEP_DEG = 360 / 12;\r\n    this.steps = [];\r\n    \r\n    this.CLOCK_TYPES = {\r\n        \"hours\": {\r\n            range: 12,\r\n        },\r\n        \"minutes\": {\r\n            range: 60,\r\n        }\r\n    }\r\n    \r\n    this.getPointerStyle = function() {\r\n        var divider = 1;\r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                divider = 12;\r\n                break;\r\n            case TYPE_MINUTES:\r\n                divider = 60;\r\n                break;\r\n        }  \r\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\r\n        return { \r\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\r\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\r\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\r\n        }\r\n    };\r\n    \r\n    this.setTimeByDeg = function(deg) {\r\n        deg = deg >= 360 ? 0 : deg;\r\n        var divider = 0;\r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                divider = 12;\r\n                break;\r\n            case TYPE_MINUTES:\r\n                divider = 60;\r\n                break;\r\n        }  \r\n        \r\n        self.setTime(\r\n            Math.round(divider / 360 * deg)\r\n        );\r\n    };\r\n    \r\n    this.setTime = function(time, type) {\r\n        this.selected = time;\r\n        \r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                if(self.time.locale('en').format(\"A\") == \"PM\") time += 12;\r\n                this.time.hours(time);\r\n                break;\r\n            case TYPE_MINUTES:\r\n                if(time > 59) time -= 60;\r\n                this.time.minutes(time);\r\n                break;\r\n        }\r\n        \r\n    };\r\n    \r\n    this.init = function() {\r\n        self.type = self.type || \"hours\";\r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                for(var i = 1; i <= 12; i++)\r\n                    self.steps.push(i);\r\n                self.selected = self.time.hours() || 0;\r\n                if(self.selected > 12) self.selected -= 12;\r\n                    \r\n                break;\r\n            case TYPE_MINUTES:\r\n                for(var i = 5; i <= 55; i+=5)\r\n                    self.steps.push(i);\r\n                self.steps.push(0);\r\n                self.selected = self.time.minutes() || 0;\r\n                \r\n                break;\r\n        }\r\n    };\r\n    \r\n    this.init();\r\n}\r\n\r\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        bindToController: {\r\n            'type': '@?',\r\n            'time': '='\r\n        },\r\n        replace: true,\r\n        template: '<div class=\"mdp-clock\">' +\r\n                        '<div class=\"mdp-clock-container\">' +\r\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\r\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\r\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\r\n                            '</md-toolbar>' +\r\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\r\n                        '</div>' +\r\n                    '</div>',\r\n        controller: [\"$scope\", ClockCtrl],\r\n        controllerAs: \"clock\",\r\n        link: function(scope, element, attrs, ctrl) {\r\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\r\n                timepickerCtrl = scope.$parent.timepicker;\r\n            \r\n            var onEvent = function(event) {\r\n                var containerCoords = event.currentTarget.getClientRects()[0];\r\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\r\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\r\n\r\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\r\n                $timeout(function() {\r\n                    ctrl.setTimeByDeg(deg + 180);\r\n                    if([\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\r\n                });\r\n            }; \r\n            \r\n            element.on(\"mousedown\", function() {\r\n               element.on(\"mousemove\", onEvent);\r\n            });\r\n            \r\n            element.on(\"mouseup\", function(e) {\r\n                element.off(\"mousemove\", onEvent);\r\n            });\r\n            \r\n            element.on(\"click\", onEvent);\r\n            scope.$on(\"$destroy\", function() {\r\n                element.off(\"click\", onEvent);\r\n                element.off(\"mousemove\", onEvent); \r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\n    module.provider(\"$mdpTimePicker\", function() {\r\n    var LABEL_OK = \"OK\",\r\n        LABEL_CANCEL = \"Cancel\";\r\n        \r\n    this.setOKButtonLabel = function(label) {\r\n        LABEL_OK = label;\r\n    };\r\n    \r\n    this.setCancelButtonLabel = function(label) {\r\n        LABEL_CANCEL = label;\r\n    };\r\n    \r\n    this.$get = [\"$mdDialog\", function($mdDialog) {\r\n        var timePicker = function(currentDate, options) {\r\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\r\n            if (!angular.isObject(options)) options = {};\r\n    \r\n            return $mdDialog.show({\r\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', TimePickerCtrl],\r\n                controllerAs: 'timepicker',\r\n                clickOutsideToClose: true,\r\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\r\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\r\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\r\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\r\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:' + \r\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\r\n                                    '</div>' +\r\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \r\n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.locale(\\'en\\').format(\\'A\\') == \\'AM\\' }\">AM</span>' +\r\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.locale(\\'en\\')format(\\'A\\') == \\'PM\\' }\">PM</span>' +\r\n                                    '</div>' + \r\n                                '</md-toolbar>' +\r\n                                '<div>' +\r\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\r\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\r\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\r\n                                    '</div>' +\r\n                                    \r\n                                    '<md-dialog-actions layout=\"row\">' +\r\n\t                                \t'<span flex></span>' +\r\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\r\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\r\n                                    '</md-dialog-actions>' +\r\n                                '</div>' +\r\n                            '</md-dialog-content>' +\r\n                        '</md-dialog>',\r\n                targetEvent: options.targetEvent,\r\n                locals: {\r\n                    currentDate: currentDate\r\n                }\r\n            });\r\n        };\r\n    \r\n        return timePicker;\r\n    }];\r\n});\r\n\r\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\r\n    return  {\r\n        restrict: 'A',\r\n        require: '?ngModel',\r\n        scope: {\r\n            \"timeFormat\": \"@mdpFormat\"\r\n        },\r\n        link: function(scope, element, attrs, ngModel) {\r\n            var timeFormat = scope.timeFormat || \"HH:mm\";\r\n            if ('undefined' !== typeof attrs.type && ngModel) {\r\n                angular.element(element).on(\"click\", function(ev) {\r\n                    ev.preventDefault();\r\n                    $mdpTimePicker(ngModel.$modelValue, {\r\n                        targetEvent: ev\r\n                    }).then(function(selectedDate) {\r\n                        $timeout(function() { \r\n                            switch(attrs.type) {\r\n                \t\t        case \"time\":\r\n                        \t        ngModel.$setViewValue(moment(selectedDate).format(\"HH:mm\")); \r\n                        \t        break;\r\n                    \t        default:\r\n                    \t            ngModel.$setViewValue(moment(selectedDate).format(timeFormat));\r\n                    \t            break;\r\n                            }\r\n                        \tngModel.$render(); \r\n                        });\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    };\r\n}]);\r\n\n})();"],"sourceRoot":"/source/"}