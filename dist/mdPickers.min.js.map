{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","options","self","this","date","moment","minDate","isValid","maxDate","firstDow","displayFormat","dateFilter","angular","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","noop","then","CalendarCtrl","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","firstDay","day","length","arr","i","value","enabled","isDayEnabled","push","selectDate","dom","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","formatValidator","formatString","formats","split","isDate","minDateValidator","format","isSameOrAfter","maxDateValidator","isSameOrBefore","filterValidator","filter","TimePickerCtrl","time","autoSwitch","VIEW_HOURS","VIEW_MINUTES","currentView","clockHours","parseInt","clockMinutes","minutes","switchView","setAM","hours","hour","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","getPointerStyle","divider","type","degrees","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","init","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","provider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","$get","datePicker","Date","now","isObject","show","controller","controllerAs","clickOutsideToClose","template","targetEvent","locals","skipHide","$animate","bindToController","link","scope","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","transclude","noFloat","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","mdpDisabled","dateFormat","acceptableDateFormat","disabled","pre","ngModel","$transclude","post","updateInputElement","inputElement","inputContainerCtrl","setHasValue","$isEmpty","updateDate","strValue","$setViewValue","$pristine","messages","hasClass","$render","onInputElementEvents","event","target","$viewVaue","clone","append","model","isError","$invalid","$formatters","unshift","$validators","modelValue","viewValue","required","isUndefined","$parsers","parsed","$modelValue","originalModel","month","showPicker","ev","on","$on","off","replace","timepickerCtrl","$parent","timepicker","onEvent","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","e","timePicker","$mdpTimePicker","timeFormat","updateTime","$error","setInvalid","Object","keys","seconds"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$mdIconProvider.icon(icon.id, icon.url);\n\t});\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$templateCache.put(icon.url, icon.svg);\n\t});\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n            \n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n            \n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n            \n            return {};\n        }\n    } \n}]);\n/* global moment, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    this.date = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.firstDow = options.firstDow;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n\n    // validate min and max date\n\tif (this.minDate && this.maxDate) {\n\t\tif (this.maxDate.isBefore(this.minDate)) {\n\t\t\tthis.maxDate = moment(this.minDate).add(1, 'days');\n\t\t}\n\t}\n\n\tif (this.date) {\n\t\t// check min date\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n\t\t\tthis.date = moment(this.minDate);\n    \t}\n\n    \t// check max date\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n\t\t\tthis.date = moment(this.maxDate);\n    \t}\n\t}\n\n\tthis.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n        \tif(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n\n        \treturn this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n\tthis.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n\n    this.showYear = function() {\n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n\n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n    \tvar date = this.date;\n\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n    \t\tdate = moment(this.minDate);\n    \t}\n\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n    \t\tdate = moment(this.maxDate);\n    \t}\n\n        $mdDialog.hide(date.toDate());\n    };\n\n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })\n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\";\n\n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;\n    };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(currentDate, options) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            options.displayFormat = DISPLAY_FORMAT;\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                                    '</md-toolbar>' +\n                                '</div>' +\n                                '<div>' +\n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" first-dow=\"datepicker.firstDow\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                },\n                skipHide: true\n            });\n        };\n\n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n\tvar self = this;\n\tthis.dow = this.firstDow || moment.localeData().firstDayOfWeek();\n\n    this.weekDays = [].concat(\n        moment.weekdaysMin().slice(\n            this.dow\n        ),\n        moment.weekdaysMin().slice(\n            0,\n            this.dow\n        )\n    );\n\n    this.daysInMonth = [];\n\n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day() - this.dow;\n\n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n\n        return arr;\n    };\n\n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) &&\n            (!this.maxDate || this.maxDate >= day) &&\n            (!self.dateFilter || !self.dateFilter(day));\n    };\n\n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n\n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n\n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    })\n\n    self.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"firstDow\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a);\n            });\n\n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n\n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n\n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(value, formatString) {\n    var formats = formatString.split(',');\n    for( var i = 0; i < formats.length; i++ ) {\n      if ( moment(value, formats[i], true).isValid() ) {\n        return !value || angular.isDate(value) || moment(value, formats[i], true).isValid();\n      }\n    }\n\n    return false;\n}\n\nfunction minDateValidator(value, format, minDate) {\n    var minDate = moment(minDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !minDate.isValid() ||\n            date.isSameOrAfter(minDate);\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n    var maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !maxDate.isValid() ||\n            date.isSameOrBefore(maxDate);\n}\n\nfunction filterValidator(value, format, filter) {\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !angular.isFunction(filter) ||\n            !filter(date);\n}\n\nfunction requiredValidator(value, ngModel) {\n    return value\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"firstDow\": \"=mdpFirstDow\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"acceptableDateFormat\": \"@mdpAcceptableFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\",\n            \"disabled\": \"=?mdpDisabled\"\n        },\n        link: {\n            pre: function(scope, element, attrs, ngModel, $transclude) {\n\n            },\n            post: function(scope, element, attrs, ngModel, $transclude) {\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n                $transclude(function(clone) {\n                   inputContainer.append(clone);\n                });\n\n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n                scope.type = scope.dateFormat ? \"text\" : \"date\"\n                scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n                scope.acceptableDateFormat = scope.acceptableDateFormat || scope.dateFormat;\n                scope.model = ngModel;\n\n                scope.isError = function() {\n                    return !ngModel.$pristine && !!ngModel.$invalid;\n                };\n\n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && moment(value);\n                    if(date && date.isValid())\n                        updateInputElement(date.format(scope.dateFormat));\n                    else\n                        updateInputElement(null);\n                });\n\n                ngModel.$validators.format = function(modelValue, viewValue) {\n                  return formatValidator(viewValue, scope.acceptableDateFormat);\n                };\n\n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(viewValue, scope.dateFormat, scope.minDate);\n                };\n\n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\n                };\n\n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\n                };\n\n                ngModel.$validators.required = function(modelValue, viewValue) {\n                    return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n                };\n\n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = moment(value, scope.dateFormat, true);\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = moment(ngModel.$modelValue);\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n\n                            parsed = originalModel;\n                        }\n                        return parsed.toDate();\n                    } else\n                        return null;\n                });\n\n                // update input element value\n                function updateInputElement(value) {\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n\n                function updateDate(date) {\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n                        strValue = value.format(scope.dateFormat);\n\n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(strValue);\n                    } else {\n                        updateInputElement(date);\n                        ngModel.$setViewValue(date);\n                    }\n\n                    if(!ngModel.$pristine &&\n                        messages.hasClass(\"md-auto-hide\") &&\n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                    ngModel.$render();\n                }\n\n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                \t    minDate: scope.minDate,\n                \t    maxDate: scope.maxDate,\n                \t    firstDow: scope.firstDow,\n                \t    dateFilter: scope.dateFilter,\n                \t    targetEvent: ev\n            \t    }).then(updateDate);\n                };\n\n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewVaue)\n                        updateDate(event.target.value);\n                }\n\n                inputElement.on(\"reset input blur\", onInputElementEvents);\n\n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                });\n            }\n        }\n    };\n}]);\n\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"firstDow\": \"@mdpFirstDow\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(viewValue, scope.format);\n            };\n\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(viewValue, scope.format, scope.minDate);\n            };\n\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\n            };\n\n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\n            };\n\n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n            \t    minDate: scope.minDate,\n            \t    maxDate: scope.maxDate,\n            \t    firstDow: scope.firstDow,\n            \t    dateFilter: scope.dateFilter,\n            \t    targetEvent: ev\n        \t    }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n/* global moment, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, $mdMedia) {\n\tvar self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = moment(time);\n    this.autoSwitch = !!autoSwitch;\n    \n    this.clockHours = parseInt(this.time.format(\"h\"));\n    this.clockMinutes = parseInt(this.time.minutes());\n    \n\t$scope.$mdMedia = $mdMedia;\n\t\n\tthis.switchView = function() {\n\t    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n\t};\n    \n\tthis.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    var self = this;\n    \n    this.STEP_DEG = 360 / 12;\n    this.steps = [];\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.setTime = function(time, type) {\n        this.selected = time;\n        \n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n        \n    };\n    \n    this.init = function() {\n        self.type = self.type || \"hours\";\n        switch(self.type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = self.time.hours() || 0;\n                if(self.selected > 12) self.selected -= 12;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    this.init();\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n            \n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            }; \n            \n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n            \n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\";\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(time, options) {\n            if(!angular.isDate(time)) time = Date.now();\n            if (!angular.isObject(options)) options = {};\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'time', 'autoSwitch', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout=\"row\">' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch\n                },\n                skipHide: true\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n            \n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n                \n            $transclude(function(clone) {\n               inputContainer.append(clone); \n            });\n            \n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n            \n            scope.type = scope.timeFormat ? \"text\" : \"time\"\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch || false;\n            \n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n            \n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && moment(value);\n                if(time && time.isValid()) \n                    updateInputElement(time.format(scope.timeFormat));\n                else\n                    updateInputElement(null);\n            });\n            \n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n            \n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n            \n            ngModel.$parsers.unshift(function(value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n                        \n                        parsed = originalModel;\n                    }\n                    return parsed.toDate(); \n                } else\n                    return null;\n            });\n            \n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n            \n            function updateTime(time) {\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n                    strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n                \n                if(!ngModel.$pristine && \n                    messages.hasClass(\"md-auto-hide\") && \n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n                \n                ngModel.$render();\n            }\n                \n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }).then(function(time) {\n                    updateTime(time, true);\n                });\n            };\n            \n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n            \n            inputElement.on(\"reset input blur\", onInputElementEvents);\n            \n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            })\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n            \n            element.on(\"click\", showPicker);\n            \n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n})();"]}