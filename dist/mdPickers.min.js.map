{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","options","self","this","date","moment","minDate","isValid","maxDate","displayFormat","dateFilter","angular","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","noop","then","CalendarCtrl","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","firstDay","day","length","arr","i","value","enabled","isDayEnabled","push","selectDate","dom","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","formatValidator","format","isDate","minDateValidator","maxDateValidator","filterValidator","filter","TimePickerCtrl","time","autoSwitch","VIEW_HOURS","VIEW_MINUTES","currentView","console","log","clockHours","parseInt","clockMinutes","minutes","switchView","setAM","hours","hour","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","getPointerStyle","divider","type","degrees","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","init","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","provider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","defaultOption","okLabel","cancelLabel","$get","datePicker","Date","now","isObject","extend","show","controller","controllerAs","clickOutsideToClose","template","targetEvent","locals","skipHide","$animate","bindToController","link","scope","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","transclude","noFloat","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","dateFormat","pre","ngModel","$transclude","post","updateInputElement","$valid","inputElement","size","inputContainerCtrl","setHasValue","$isEmpty","updateDate","strValue","$setViewValue","$pristine","messages","hasClass","$render","onInputElementEvents","event","target","$viewVaue","clone","append","model","isError","$invalid","$formatters","unshift","$validators","modelValue","viewValue","$parsers","parsed","$modelValue","originalModel","month","showPicker","ev","on","$on","off","replace","timepickerCtrl","$parent","timepicker","onEvent","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","e","defaultOptions","timePicker","am","meridiem","pm","$mdpTimePicker","timeFormat","updateTime","$error","setInvalid","Object","keys","seconds"],"mappings":"CAAA,WACA,YA8DA,SAASA,GAAeC,EAAQC,EAAWC,EAAUC,EAAUC,EAAaC,GACxE,GAAIC,GAAOC,IAEXP,GAAOK,QAAUA,EACjBE,KAAKC,KAAOC,OAAOL,GACnBG,KAAKG,QAAUL,EAAQK,SAAWD,OAAOJ,EAAQK,SAASC,UAAYF,OAAOJ,EAAQK,SAAW,KAChGH,KAAKK,QAAUP,EAAQO,SAAWH,OAAOJ,EAAQO,SAASD,UAAYF,OAAOJ,EAAQO,SAAW,KAChGL,KAAKM,cAAgBR,EAAQQ,eAAiB,cAC9CN,KAAKO,WAAaC,QAAQC,WAAWX,EAAQS,YAAcT,EAAQS,WAAa,KAChFP,KAAKU,eAAgB,EAGpBV,KAAKG,SAAWH,KAAKK,SACpBL,KAAKK,QAAQM,SAASX,KAAKG,WAC9BH,KAAKK,QAAUH,OAAOF,KAAKG,SAASS,IAAI,EAAG,SAIzCZ,KAAKC,OAEDD,KAAKG,SAAWH,KAAKC,KAAKU,SAASX,KAAKG,WAC9CH,KAAKC,KAAOC,OAAOF,KAAKG,UAIlBH,KAAKK,SAAWL,KAAKC,KAAKY,QAAQb,KAAKK,WAC7CL,KAAKC,KAAOC,OAAOF,KAAKK,WAI1BL,KAAKc,WACEC,cAAe,EACfC,UAAW,EACXC,MAAQlB,EAAKI,QAAUJ,EAAKI,QAAQe,OAAS,KAC7CC,IAAMpB,EAAKM,QAAUN,EAAKM,QAAQa,OAAS,EAC3CE,eAAgB,SAASC,GAIxB,MAHGrB,MAAKe,cAAgBM,IACjBrB,KAAKe,cAAgBM,GAErBrB,KAAKiB,MAAQI,GAErBC,UAAW,WACP,MAAOC,MAAKC,IACRxB,KAAKe,cAAgBQ,KAAKE,MAAMzB,KAAKgB,UAAY,GACjDO,KAAKG,IAAI1B,KAAKiB,MAAQjB,KAAKmB,KAAO,KAK9C1B,EAAOE,SAAWA,EAClBF,EAAOyB,KAAOlB,KAAKC,KAAKiB,OAE3BlB,KAAK2B,WAAa,SAAST,GACpBnB,EAAKE,KAAKiB,KAAKA,GACfzB,EAAOyB,KAAOA,EACdnB,EAAKW,eAAgB,EACrBX,EAAK6B,WAGT5B,KAAK6B,SAAW,WACZ9B,EAAK+B,aAAgB/B,EAAKE,KAAKiB,OAASnB,EAAKe,UAAUG,MAASM,KAAKE,MAAM1B,EAAKe,UAAUE,UAAY,GACtGjB,EAAKe,UAAUC,cAAiBhB,EAAKE,KAAKiB,OAASnB,EAAKe,UAAUG,MAAS,EAC3ElB,EAAKW,eAAgB,GAGzBV,KAAK+B,aAAe,WAChBhC,EAAKW,eAAgB,GAGzBV,KAAKgC,OAAS,WACVtC,EAAUsC,UAGdhC,KAAKiC,QAAU,WACd,GAAIhC,GAAOD,KAAKC,IAEZD,MAAKG,SAAWH,KAAKC,KAAKU,SAASX,KAAKG,WAC3CF,EAAOC,OAAOF,KAAKG,UAGhBH,KAAKK,SAAWL,KAAKC,KAAKY,QAAQb,KAAKK,WAC1CJ,EAAOC,OAAOF,KAAKK,UAGjBX,EAAUwC,KAAKjC,EAAKkC,WAGxBnC,KAAK4B,QAAU,WACX7B,EAAKqC,WAAY,EACjBxC,EAASY,QAAQ6B,MAAMC,KAAK,WACxBvC,EAAKqC,WAAY,KA6E7B,QAASG,GAAa9C,GACrB,GAAIM,GAAOC,IACXA,MAAKwC,IAAMtC,OAAOuC,aAAaC,iBAE5B1C,KAAK2C,YAAcC,OACf1C,OAAO2C,cAAcC,MACjB9C,KAAKwC,KAETtC,OAAO2C,cAAcC,MACjB,EACA9C,KAAKwC,MAIbxC,KAAK+C,eAEL/C,KAAKgD,eAAiB,WAClB,GAAIC,GAAOlD,EAAKE,KAAK8C,cACjBG,EAAWhD,OAAOH,EAAKE,MAAMA,KAAK,GAAGkD,MAAQnD,KAAKwC,GAExC,GAAXU,IAAcA,EAAWlD,KAAK2C,SAASS,OAAS,EAInD,KAAI,GADAC,MACIC,EAAI,EAASJ,EAAWD,GAAjBK,EAAwBA,IAAK,CACxC,GAAIH,GAAM,IACPG,GAAIJ,IACHC,GACII,MAAQD,EAAIJ,EACZM,QAASzD,EAAK0D,aAAavD,OAAOH,EAAKE,MAAMA,KAAKqD,EAAIJ,GAAUf,YAGxEkB,EAAIK,KAAKP,GAGb,MAAOE,IAGXrD,KAAKyD,aAAe,SAASN,GACzB,QAASnD,KAAKG,WAAWH,KAAKG,SAAWgD,IACnCnD,KAAKK,WAAWL,KAAKK,SAAW8C,IAChCpD,EAAKQ,YAAeR,EAAKQ,WAAW4C,KAG9CnD,KAAK2D,WAAa,SAASC,GACvB7D,EAAKE,KAAKA,KAAK2D,IAGnB5D,KAAK6D,UAAY,WACb9D,EAAKE,KAAKW,IAAI,EAAG,WAGrBZ,KAAK8D,UAAY,WACb/D,EAAKE,KAAK8D,SAAS,EAAG,WAG1B/D,KAAKgE,kBAAoB,WACrBjE,EAAKgD,YAAchD,EAAKiD,kBAG5BvD,EAAOwE,OAAO,WAAa,MAAQlE,GAAKE,KAAKiE,QAAU,SAASC,EAAUC,GACnED,GAAYA,IAAaC,GACxBrE,EAAKiE,sBAGbjE,EAAKiE,oBA0DT,QAASK,GAAgBd,EAAOe,GAC5B,OAAQf,GAAS/C,QAAQ+D,OAAOhB,IAAUrD,OAAOqD,EAAOe,GAAQ,GAAMlE,UAG1E,QAASoE,GAAiBjB,EAAOe,EAAQnE,GACrC,GAAIA,GAAUD,OAAOC,EAAS,cAAc,GACxCF,EAAOO,QAAQ+D,OAAOhB,GAASrD,OAAOqD,GAAUrD,OAAOqD,EAAOe,GAAQ,EAE1E,QAAQf,GACA/C,QAAQ+D,OAAOhB,KACdpD,EAAQC,WACTH,EAAKY,QAAQV,GAGzB,QAASsE,GAAiBlB,EAAOe,EAAQjE,GACrC,GAAIA,GAAUH,OAAOG,EAAS,cAAc,GACxCJ,EAAOO,QAAQ+D,OAAOhB,GAASrD,OAAOqD,GAAUrD,OAAOqD,EAAOe,GAAQ,EAE1E,QAAQf,GACA/C,QAAQ+D,OAAOhB,KACdlD,EAAQD,WACTH,EAAKU,SAASN,GAG1B,QAASqE,GAAgBnB,EAAOe,EAAQK,GACpC,GAAI1E,GAAOO,QAAQ+D,OAAOhB,GAASrD,OAAOqD,GAAUrD,OAAOqD,EAAOe,GAAQ,EAE1E,QAAQf,GACA/C,QAAQ+D,OAAOhB,KACd/C,QAAQC,WAAWkE,IACpBA,EAAO1E,GAwMnB,QAAS2E,GAAenF,EAAQC,EAAWmF,EAAMC,EAAYnF,EAAUG,GACnEL,EAAOK,QAAUA,CAEpB,IAAIC,GAAOC,IACRA,MAAK+E,WAAa,EAClB/E,KAAKgF,aAAe,EACpBhF,KAAKiF,YAAcjF,KAAK+E,WACxB/E,KAAK6E,KAAO3E,OAAO2E,GACnB7E,KAAK8E,aAAeA,EACpBI,QAAQC,IAAIL,GAEZ9E,KAAKoF,WAAaC,SAASrF,KAAK6E,KAAKP,OAAO,MAC5CtE,KAAKsF,aAAeD,SAASrF,KAAK6E,KAAKU,WAE1C9F,EAAOE,SAAWA,EAElBK,KAAKwF,WAAa,WACdzF,EAAKkF,YAAclF,EAAKkF,aAAelF,EAAKgF,WAAahF,EAAKiF,aAAejF,EAAKgF,YAGtF/E,KAAKyF,MAAQ,WACH1F,EAAK8E,KAAKa,SAAW,IACpB3F,EAAK8E,KAAKc,KAAK5F,EAAK8E,KAAKc,OAAS,KAG1C3F,KAAK4F,MAAQ,WACN7F,EAAK8E,KAAKa,QAAU,IACnB3F,EAAK8E,KAAKc,KAAK5F,EAAK8E,KAAKc,OAAS,KAG1C3F,KAAKgC,OAAS,WACVtC,EAAUsC,UAGdhC,KAAKiC,QAAU,WACXvC,EAAUwC,KAAKlC,KAAK6E,KAAK1C,WAIjC,QAAS0D,GAAUpG,GACf,GAAIqG,GAAa,QACbC,EAAe,UACfhG,EAAOC,IAEXA,MAAKgG,SAAW,GAChBhG,KAAKiG,SAELjG,KAAKkG,aACDR,OACIS,MAAO,IAEXZ,SACIY,MAAO,KAIfnG,KAAKoG,gBAAkB,WACnB,GAAIC,GAAU,CACd,QAAOtG,EAAKuG,MACR,IAAKR,GACDO,EAAU,EACV,MACJ,KAAKN,GACDM,EAAU,GAGlB,GAAIE,GAAUhF,KAAKiF,MAAMzG,EAAK0G,UAAY,IAAMJ,IAAY,GAC5D,QACIK,oBAAqB,UAAYH,EAAU,OAC3CI,gBAAiB,UAAYJ,EAAU,OACvCK,UAAa,UAAYL,EAAU,SAI3CvG,KAAK6G,aAAe,SAASC,GACzBA,EAAMA,GAAO,IAAM,EAAIA,CACvB,IAAIT,GAAU,CACd,QAAOtG,EAAKuG,MACR,IAAKR,GACDO,EAAU,EACV,MACJ,KAAKN,GACDM,EAAU,GAIlBtG,EAAKgH,QACDxF,KAAKiF,MAAMH,EAAU,IAAMS,KAInC9G,KAAK+G,QAAU,SAASlC,EAAMyB,GAG1B,OAFAtG,KAAKyG,SAAW5B,EAET9E,EAAKuG,MACR,IAAKR,GAC2B,MAAzB/F,EAAK8E,KAAKP,OAAO,OAAcO,GAAQ,IAC1C7E,KAAK6E,KAAKa,MAAMb,EAChB,MACJ,KAAKkB,GACElB,EAAO,KAAIA,GAAQ,IACtB7E,KAAK6E,KAAKU,QAAQV,KAM9B7E,KAAKgH,KAAO,WAER,OADAjH,EAAKuG,KAAOvG,EAAKuG,MAAQ,QAClBvG,EAAKuG,MACR,IAAKR,GACD,IAAI,GAAIxC,GAAI,EAAQ,IAALA,EAASA,IACpBvD,EAAKkG,MAAMvC,KAAKJ,EACpBvD,GAAK0G,SAAW1G,EAAK8E,KAAKa,SAAW,EAClC3F,EAAK0G,SAAW,KAAI1G,EAAK0G,UAAY,GAExC,MACJ,KAAKV,GACD,IAAI,GAAIzC,GAAI,EAAQ,IAALA,EAASA,GAAG,EACvBvD,EAAKkG,MAAMvC,KAAKJ,EACpBvD,GAAKkG,MAAMvC,KAAK,GAChB3D,EAAK0G,SAAW1G,EAAK8E,KAAKU,WAAa,IAMnDvF,KAAKgH,OAlsBT,GAAIC,GAASzG,QAAQyG,OAAO,aAC3B,aACA,YACA,UAGDA,GAAOC,QAAQ,kBAAmB,mBAAoB,SAASC,EAAiBC,GAC/E5G,QAAQ6G,QAAQD,EAAkB,SAASE,EAAMjG,GAChD8F,EAAgBG,KAAKA,EAAKC,GAAID,EAAKE,UAIrCP,EAAOQ,KAAK,iBAAkB,mBAAoB,SAASC,EAAgBN,GAC1E5G,QAAQ6G,QAAQD,EAAkB,SAASE,EAAMjG,GAChDqG,EAAeC,IAAIL,EAAKE,IAAKF,EAAKM,UAGpCX,EAAOY,SAAS,qBAERN,GAAI,mBACJC,IAAK,uBACLI,IAAK,4LAGLL,GAAI,oBACJC,IAAK,wBACLI,IAAK,6LAGLL,GAAI,kBACJC,IAAK,sBACLI,IAAK,kVAGLL,GAAI,YACJC,IAAK,gBACLI,IAAK,wRAGbX,EAAOa,UAAU,aAAc,UAAW,SAASC,GAChD,OACKC,SAAU,KACVC,SAAU,IACVC,QAAS,SAASC,GACd,GAAIC,GAAiBL,EAAQM,WAAWF,EAAS,mBAAmB,IAC/CJ,EAAQM,WAAWF,EAAS,mBAAmB,EAGpE,IAAKC,EAKL,MAFAD,GAAQG,YAAY,8BAA8B,WAuG9DrB,EAAOsB,SAAS,iBAAkB,WAC9B,GAAIC,GAAW,KACXC,EAAe,SACfC,EAAiB,aAErB1I,MAAK2I,iBAAmB,SAASrE,GAC7BoE,EAAiBpE,GAGrBtE,KAAK4I,iBAAmB,SAASC,GAC7BL,EAAWK,GAGf7I,KAAK8I,qBAAuB,SAASD,GACjCJ,EAAeI,EAGnB,IAAIE,IACAzI,cAAeoI,EACfM,QAASR,EACTS,YAAaR,EAGjBzI,MAAKkJ,MAAQ,YAAa,SAASxJ,GAC/B,GAAIyJ,GAAa,SAAStJ,EAAaC,GAMnC,MALKU,SAAQ+D,OAAO1E,KAAcA,EAAcuJ,KAAKC,OAChD7I,QAAQ8I,SAASxJ,KAAUA,MAEhCA,EAAUU,QAAQ+I,OAAOR,EAAejJ,GAEjCJ,EAAU8J,MACbC,YAAc,SAAU,YAAa,WAAY,WAAY,cAAe,UAAWjK,GACvFkK,aAAc,aACdC,qBAAqB,EACrBC,SAAU,stDAyBVC,YAAa/J,EAAQ+J,YACrBC,QACIjK,YAAaA,EACbC,QAASA,GAEbiK,UAAU,IAIlB,OAAOZ,OAwEflC,EAAOa,UAAU,eAAgB,WAAY,SAASkC,GAClD,OACIhC,SAAU,IACViC,kBACIhK,KAAQ,IACRE,QAAW,IACXE,QAAW,IACXE,WAAc,KAElBqJ,SAAU,26CAgBVH,YAAa,SAAUlH,GACvBmH,aAAc,WACdQ,KAAM,SAASC,EAAOhC,EAASiC,EAAOC,GAClC,GAAIC,IACAnC,EAAQ,GAAGoC,cAAc,2BACzBpC,EAAQ,GAAGoC,cAAc,sBACzBpC,EAAQ,GAAGoC,cAAc,4BAC3BC,IAAI,SAASC,GACZ,MAAOjK,SAAQ2H,QAAQsC,IAG1BN,GAAMlG,OAAO,WAAa,MAAQoG,GAAKpK,KAAKqE,OAAO,WAAa,SAASH,EAAUC,GAC/E,GAAIsG,GAAY,IAOhB,IALGvG,EAAWC,EACVsG,EAAY,mBACGtG,EAAXD,IACJuG,EAAY,oBAEbA,EACC,IAAI,GAAIpH,KAAKgH,GACTA,EAAahH,GAAGqH,SAASD,GACzBV,EAASY,YAAYN,EAAahH,GAAIoH,UAyC9DzD,EAAOa,UAAU,iBAAkB,iBAAkB,WAAY,SAAS+C,EAAgBjL,GACtF,OACIoI,SAAU,IACV8C,QAAS,UACTC,YAAY,EACZnB,SAAU,SAASzB,EAASiC,GACxB,GAAIY,GAAUxK,QAAQyK,UAAUb,EAAMc,YAClCC,EAAc3K,QAAQyK,UAAUb,EAAMgB,gBAAkBhB,EAAMgB,eAAiB,GAC/EC,IAAc7K,QAAQyK,UAAUb,EAAMkB,eAE1C,OAAO,qLAI0BN,EAAU,eAAiB,IAAM,mEACVG,EAAc,kBAAoBA,EAAc,KAAOE,EAAc,kCAAoC,IAAM,kCAI3KlB,OACIhK,QAAW,cACXE,QAAW,cACXE,WAAc,iBACdgL,WAAc,aACdJ,YAAe,kBACfnC,QAAW,cACXC,YAAe,kBACf+B,QAAW,cACXK,YAAe,mBAEnBnB,MACIsB,IAAK,SAASrB,EAAOhC,EAASiC,EAAOqB,EAASC,KAG9CC,KAAM,SAASxB,EAAOhC,EAASiC,EAAOqB,EAASC,GA2D3C,QAASE,GAAmBrI,GACrBkI,EAAQI,SACPC,EAAa,GAAGC,KAAOxI,EAAMH,OAAS,GAC1C0I,EAAa,GAAGvI,MAAQA,EACxByI,EAAmBC,aAAaR,EAAQS,SAAS3I,IAGrD,QAAS4I,GAAWlM,GAChB,GAAIsD,GAAQrD,OAAOD,EAAMO,QAAQ+D,OAAOtE,GAAQ,KAAOkK,EAAMoB,YAAY,GACrEa,EAAW7I,EAAMe,OAAO6F,EAAMoB,WAE/BhI,GAAMnD,WACLwL,EAAmBQ,GACnBX,EAAQY,cAAcD,KAEtBR,EAAmB3L,GACnBwL,EAAQY,cAAcpM,KAGtBwL,EAAQa,WACRC,EAASC,SAAS,iBAClBpE,EAAeoE,SAAS,qBAAqBD,EAAS3B,YAAY,gBAEtEa,EAAQgB,UAcZ,QAASC,GAAqBC,GACvBA,EAAMC,OAAOrJ,QAAUkI,EAAQoB,WAC9BV,EAAWQ,EAAMC,OAAOrJ,OAjGhC,GAAIuI,GAAetL,QAAQ2H,QAAQA,EAAQ,GAAGoC,cAAc,UACxDnC,EAAiB5H,QAAQ2H,QAAQA,EAAQ,GAAGoC,cAAc,uBAC1DyB,EAAqB5D,EAAeqB,WAAW,mBAEnDiC,GAAY,SAASoB,GAClB1E,EAAe2E,OAAOD,IAGzB,IAAIP,GAAW/L,QAAQ2H,QAAQC,EAAe,GAAGmC,cAAc,iBAE/DJ,GAAM7D,KAAO6D,EAAMoB,WAAa,OAAS,OACzCpB,EAAMoB,WAAapB,EAAMoB,YAAc,aACvCpB,EAAM6C,MAAQvB,EAEdtB,EAAM8C,QAAU,WACZ,OAAQxB,EAAQa,aAAeb,EAAQyB,UAI3CzB,EAAQ0B,YAAYC,QAAQ,SAAS7J,GACjC,GAAItD,GAAOO,QAAQ+D,OAAOhB,IAAUrD,OAAOqD,EACxCtD,IAAQA,EAAKG,WACZwL,EAAmB3L,EAAKqE,OAAO6F,EAAMoB,eAG7CE,EAAQ4B,YAAY/I,OAAS,SAASgJ,EAAYC,GAC9C,MAAOlJ,GAAgBkJ,EAAWpD,EAAMoB,aAG5CE,EAAQ4B,YAAYlN,QAAU,SAASmN,EAAYC,GAC/C,MAAO/I,GAAiB+I,EAAWpD,EAAMoB,WAAYpB,EAAMhK,UAG/DsL,EAAQ4B,YAAYhN,QAAU,SAASiN,EAAYC,GAC/C,MAAO9I,GAAiB8I,EAAWpD,EAAMoB,WAAYpB,EAAM9J,UAG/DoL,EAAQ4B,YAAY1I,OAAS,SAAS2I,EAAYC,GAC9C,MAAO7I,GAAgB6I,EAAWpD,EAAMoB,WAAYpB,EAAM5J,aAG9DkL,EAAQ+B,SAASJ,QAAQ,SAAS7J,GAC9B,GAAIkK,GAASvN,OAAOqD,EAAO4G,EAAMoB,YAAY,EAC7C,IAAGkC,EAAOrN,UAAW,CACjB,GAAGI,QAAQ+D,OAAOkH,EAAQiC,aAAc,CACpC,GAAIC,GAAgBzN,OAAOuL,EAAQiC,YACnCC,GAAczM,KAAKuM,EAAOvM,QAC1ByM,EAAcC,MAAMH,EAAOG,SAC3BD,EAAc1N,KAAKwN,EAAOxN,QAE1BwN,EAASE,EAEb,MAAOF,GAAOtL,SAEd,MAAO3B,SAAQ+D,OAAOkH,EAAQiC,aAAejC,EAAQiC,YAAc,OA8B3EvD,EAAM0D,WAAa,SAASC,GACxBjD,EAAeY,EAAQiC,aACnBvN,QAASgK,EAAMhK,QACf6I,QAASmB,EAAMnB,QACfC,YAAakB,EAAMlB,YACnB5I,QAAS8J,EAAM9J,QACfE,WAAY4J,EAAM5J,WAClBsJ,YAAaiE,IACjBxL,KAAK6J,IAQTL,EAAaiC,GAAG,mBAAoBrB,GAEpCvC,EAAM6D,IAAI,WAAY,WAClBlC,EAAamC,IAAI,mBAAoBvB,WAQzDzF,EAAOa,UAAU,iBAAkB,iBAAkB,WAAY,SAAS+C,EAAgBjL,GACtF,OACIoI,SAAU,IACV8C,QAAS,UACTX,OACIhK,QAAW,OACXE,QAAW,OACXE,WAAc,iBACdgL,WAAc,cAElBrB,KAAM,SAASC,EAAOhC,EAASiC,EAAOqB,EAASC,GAmB3C,QAASmC,GAAWC,GAChBjD,EAAeY,EAAQiC,aACtBvN,QAASgK,EAAMhK,QACfE,QAAS8J,EAAM9J,QACfE,WAAY4J,EAAM5J,WAClBsJ,YAAaiE,IACdxL,KAAK,SAASuC,GACV4G,EAAQY,cAAcnM,OAAO2E,GAAMP,OAAO6F,EAAM7F,SAChDmH,EAAQgB,YA1BhBtC,EAAMoB,WAAapB,EAAMoB,YAAc,aAEvCE,EAAQ4B,YAAY/I,OAAS,SAASgJ,EAAYC,GAC9C,MAAOlJ,GAAgBkJ,EAAWpD,EAAM7F,SAG5CmH,EAAQ4B,YAAYlN,QAAU,SAASmN,EAAYC,GAC/C,MAAO/I,GAAiB+I,EAAWpD,EAAM7F,OAAQ6F,EAAMhK,UAG3DsL,EAAQ4B,YAAYhN,QAAU,SAASiN,EAAYC,GAC/C,MAAO9I,GAAiB8I,EAAWpD,EAAM7F,OAAQ6F,EAAM9J,UAG3DoL,EAAQ4B,YAAY1I,OAAS,SAAS2I,EAAYC,GAC9C,MAAO7I,GAAgB6I,EAAWpD,EAAM7F,OAAQ6F,EAAM5J,aAe1D4H,EAAQ4F,GAAG,QAASF,GAEpB1D,EAAM6D,IAAI,WAAY,WAClB7F,EAAQ8F,IAAI,QAASJ,UAyIrC5G,EAAOa,UAAU,YAAa,WAAY,WAAY,SAASkC,EAAUpK,GACrE,OACIoI,SAAU,IACViC,kBACI3D,KAAQ,KACRzB,KAAQ,IACRC,WAAc,MAElBoJ,SAAS,EACTtE,SAAU,khBASVH,YAAa,SAAU5D,GACvB6D,aAAc,QACdQ,KAAM,SAASC,EAAOhC,EAASiC,EAAOC,GAClC,GACI8D,IADU3N,QAAQ2H,QAAQA,EAAQ,GAAGoC,cAAc,iBAClCJ,EAAMiE,QAAQC,YAE/BC,EAAU,SAAS3B,GACnB,GAAI4B,GAAkB5B,EAAM6B,cAAcC,iBAAiB,GACvDC,EAAM/B,EAAM6B,cAAcG,YAAc,GAAMhC,EAAMiC,MAAQL,EAAgBM,MAC5EC,EAAMnC,EAAMoC,MAAQR,EAAgBS,IAAQrC,EAAM6B,cAAcS,aAAe,EAE/EnI,EAAMvF,KAAKiF,MAAOjF,KAAK2N,MAAMR,EAAGI,IAAM,IAAMvN,KAAK4N,IACrDvP,GAAS,WACLyK,EAAKxD,aAAaC,EAAM,KACrBuD,EAAKvF,YAA2D,MAA5C,UAAW,SAASsK,QAAQzC,EAAMrG,OAAgB6H,GAAgBA,EAAe3I,eAIhH2C,GAAQ4F,GAAG,YAAa,WACrB5F,EAAQ4F,GAAG,YAAaO,KAG3BnG,EAAQ4F,GAAG,UAAW,SAASsB,GAC3BlH,EAAQ8F,IAAI,YAAaK,KAG7BnG,EAAQ4F,GAAG,QAASO,GACpBnE,EAAM6D,IAAI,WAAY,WAClB7F,EAAQ8F,IAAI,QAASK,GACrBnG,EAAQ8F,IAAI,YAAaK,UAMzCrH,EAAOsB,SAAS,iBAAkB,WAC9B,GAAIC,GAAW,KACXC,EAAe,QAEnBzI,MAAK4I,iBAAmB,SAASC,GAC7BL,EAAWK,GAGf7I,KAAK8I,qBAAuB,SAASD,GACjCJ,EAAeI,EAGnB,IAAIyG,IACAtG,QAASR,EACTS,YAAaR,EAGjBzI,MAAKkJ,MAAQ,YAAa,SAASxJ,GAC/B,GAAI6P,GAAa,SAAS1K,EAAM/E,GAS5B,MARIU,SAAQ+D,OAAOM,KAAOA,EAAOuE,KAAKC,OACjC7I,QAAQ8I,SAASxJ,KAAUA,MAEhCA,EAAUU,QAAQ+I,OAAO+F,EAAgBxP,GAEzCA,EAAQ0P,GAAKtP,OAAOuC,aAAagN,SAAS,IAC1C3P,EAAQ4P,GAAKxP,OAAOuC,aAAagN,SAAS,IAEnC/P,EAAU8J,MACbC,YAAc,SAAU,YAAa,OAAQ,aAAc,WAAY,UAAW7E,GAClF8E,aAAc,aACdC,qBAAqB,EACrBC,SAAU,quDA0BVC,YAAa/J,EAAQ+J,YACrBC,QACIjF,KAAMA,EACNC,WAAYhF,EAAQgF,WACpBhF,QAASA,GAEbiK,UAAU,IAIlB,OAAOwF,OAIftI,EAAOa,UAAU,iBAAkB,iBAAkB,WAAY,SAAS6H,EAAgB/P,GACtF,OACIoI,SAAU,IACV8C,QAAS,UACTC,YAAY,EACZnB,SAAU,SAASzB,EAASiC,GACxB,GAAIY,GAAUxK,QAAQyK,UAAUb,EAAMc,YAClCC,EAAc3K,QAAQyK,UAAUb,EAAMgB,gBAAkBhB,EAAMgB,eAAiB,GAC/EC,IAAc7K,QAAQyK,UAAUb,EAAMkB,eAE1C,OAAO,2LAI0BN,EAAU,eAAiB,IAAM,mEACVG,EAAc,kBAAoBA,EAAc,KAAOE,EAAc,kCAAoC,IAAM,kCAI3KlB,OACIyF,WAAc,aACdzE,YAAe,kBACfnC,QAAW,cACXC,YAAe,kBACfnE,WAAc,mBAElBoF,KAAM,SAASC,EAAOhC,EAASiC,EAAOqB,EAASC,GA+C3C,QAASE,GAAmBrI,GACrBkI,EAAQI,SACPC,EAAa,GAAGC,KAAOxI,EAAMH,OAAS,GAC1C0I,EAAa,GAAGvI,MAAQA,EACxByI,EAAmBC,aAAaR,EAAQS,SAAS3I,IAGrD,QAASsM,GAAWhL,GAChB,GAAItB,GAAQrD,OAAO2E,EAAMrE,QAAQ+D,OAAOM,GAAQ,KAAOsF,EAAMyF,YAAY,GACrExD,EAAW7I,EAAMe,OAAO6F,EAAMyF,WAE/BrM,GAAMnD,WACLwL,EAAmBQ,GACnBX,EAAQY,cAAcD,KAEtBR,EAAmB/G,GACnB4G,EAAQY,cAAcxH,KAGtB4G,EAAQa,WACRC,EAASC,SAAS,iBAClBpE,EAAeoE,SAAS,qBAAqBD,EAAS3B,YAAY,gBAEtEa,EAAQgB,UAcZ,QAASC,GAAqBC,GACvBA,EAAMC,OAAOrJ,QAAUkI,EAAQoB,WAC9BgD,EAAWlD,EAAMC,OAAOrJ,OArFhC,GAAIuI,GAAetL,QAAQ2H,QAAQA,EAAQ,GAAGoC,cAAc,UACxDnC,EAAiB5H,QAAQ2H,QAAQA,EAAQ,GAAGoC,cAAc,uBAC1DyB,EAAqB5D,EAAeqB,WAAW,mBAEnDiC,GAAY,SAASoB,GAClB1E,EAAe2E,OAAOD,IAGzB,IAAIP,GAAW/L,QAAQ2H,QAAQC,EAAe,GAAGmC,cAAc,iBAE/DJ,GAAM7D,KAAO6D,EAAMyF,WAAa,OAAS,OACzCzF,EAAMyF,WAAazF,EAAMyF,YAAc,QACvCzF,EAAMrF,WAAaqF,EAAMrF,aAAc,EAEvCqF,EAAMlG,OAAO,WAAa,MAAOwH,GAAQqE,QAAU,SAAS3L,EAAUC,GAClE4H,EAAmB+D,YAAYtE,EAAQa,aAAe0D,OAAOC,KAAKxE,EAAQqE,QAAQ1M,UACnF,GAGHqI,EAAQ0B,YAAYC,QAAQ,SAAS7J,GACjC,GAAIsB,GAAOrE,QAAQ+D,OAAOhB,IAAUrD,OAAOqD,EACxCsB,IAAQA,EAAKzE,WACZwL,EAAmB/G,EAAKP,OAAO6F,EAAMyF,eAG7CnE,EAAQ4B,YAAY/I,OAAS,SAASgJ,EAAYC,GAC9C,OAAQA,GAAa/M,QAAQ+D,OAAOgJ,IAAcrN,OAAOqN,EAAWpD,EAAMyF,YAAY,GAAMxP,WAGhGqL,EAAQ+B,SAASJ,QAAQ,SAAS7J,GAC9B,GAAIkK,GAASvN,OAAOqD,EAAO4G,EAAMyF,YAAY,EAC7C,IAAGnC,EAAOrN,UAAW,CACjB,GAAGI,QAAQ+D,OAAOkH,EAAQiC,aAAc,CACpC,GAAIC,GAAgBzN,OAAOuL,EAAQiC,YACnCC,GAAcpI,QAAQkI,EAAOlI,WAC7BoI,EAAcjI,MAAM+H,EAAO/H,SAC3BiI,EAAcuC,QAAQzC,EAAOyC,WAE7BzC,EAASE,EAEb,MAAOF,GAAOtL,SAEd,MAAO3B,SAAQ+D,OAAOkH,EAAQiC,aAAejC,EAAQiC,YAAc,OA8B3EvD,EAAM0D,WAAa,SAASC,GACxB6B,EAAelE,EAAQiC,aACnB7D,YAAaiE,EACb9E,QAASmB,EAAMnB,QACfC,YAAakB,EAAMlB,YACnBnE,WAAYqF,EAAMrF,aACnBxC,KAAK,SAASuC,GACbgL,EAAWhL,GAAM,MASzBiH,EAAaiC,GAAG,mBAAoBrB,GAEpCvC,EAAM6D,IAAI,WAAY,WAClBlC,EAAamC,IAAI,mBAAoBvB,UAMrDzF,EAAOa,UAAU,iBAAkB,iBAAkB,WAAY,SAAS6H,EAAgB/P,GACtF,OACIoI,SAAU,IACV8C,QAAS,UACTX,OACIyF,WAAc,aACd5G,QAAW,cACXC,YAAe,kBACfnE,WAAc,mBAElBoF,KAAM,SAASC,EAAOhC,EAASiC,EAAOqB,EAASC,GAE3C,QAASmC,GAAWC,GAChB6B,EAAelE,EAAQiC,aACnB7D,YAAaiE,EACbhJ,WAAYqF,EAAMrF,aACnBxC,KAAK,SAASuC,GACb4G,EAAQY,cAAcnM,OAAO2E,GAAMP,OAAO6F,EAAM7F,SAChDmH,EAAQgB,YAPhBtC,EAAM7F,OAAS6F,EAAM7F,QAAU,QAW/B6D,EAAQ4F,GAAG,QAASF,GAEpB1D,EAAM6D,IAAI,WAAY,WAClB7F,EAAQ8F,IAAI,QAASJ","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$mdIconProvider.icon(icon.id, icon.url);\n\t});\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$templateCache.put(icon.url, icon.svg);\n\t});\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n            \n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n            \n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n            \n            return {};\n        }\n    } \n}]);\n/* global moment, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    $scope.options = options;\n    this.date = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n\n    // validate min and max date\n\tif (this.minDate && this.maxDate) {\n\t\tif (this.maxDate.isBefore(this.minDate)) {\n\t\t\tthis.maxDate = moment(this.minDate).add(1, 'days');\n\t\t}\n\t}\n\n\tif (this.date) {\n\t\t// check min date\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n\t\t\tthis.date = moment(this.minDate);\n    \t}\n\n    \t// check max date\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n\t\t\tthis.date = moment(this.maxDate);\n    \t}\n\t}\n\n\tthis.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n        \tif(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n\n        \treturn this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n\tthis.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n\n    this.showYear = function() {\n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n\n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n    \tvar date = this.date;\n\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n    \t\tdate = moment(this.minDate);\n    \t}\n\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n    \t\tdate = moment(this.maxDate);\n    \t}\n\n        $mdDialog.hide(date.toDate());\n    };\n\n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })\n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\";\n\n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;\n    };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    var defaultOption = {\n        displayFormat: DISPLAY_FORMAT,\n        okLabel: LABEL_OK,\n        cancelLabel: LABEL_CANCEL\n    };\n\n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(currentDate, options) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            options = angular.extend(defaultOption, options);\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                                    '</md-toolbar>' +\n                                '</div>' +\n                                '<div>' +\n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"{{ options.cancelLabel }}\">{{ options.cancelLabel }}</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"{{ options.okLabel }}\">{{ options.okLabel }}</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options,\n                },\n                skipHide: true\n            });\n        };\n\n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n\tvar self = this;\n\tthis.dow = moment.localeData().firstDayOfWeek();\n\n    this.weekDays = [].concat(\n        moment.weekdaysMin().slice(\n            this.dow\n        ),\n        moment.weekdaysMin().slice(\n            0,\n            this.dow\n        )\n    );\n\n    this.daysInMonth = [];\n\n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day() - this.dow;\n\n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n\n        return arr;\n    };\n\n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) &&\n            (!this.maxDate || this.maxDate >= day) &&\n            (!self.dateFilter || !self.dateFilter(day));\n    };\n\n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n\n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n\n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    })\n\n    self.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a);\n            });\n\n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n\n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n\n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(value, format) {\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\nfunction minDateValidator(value, format, minDate) {\n    var minDate = moment(minDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !minDate.isValid() ||\n            date.isAfter(minDate);\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n    var maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !maxDate.isValid() ||\n            date.isBefore(maxDate);\n}\n\nfunction filterValidator(value, format, filter) {\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !angular.isFunction(filter) ||\n            filter(date);\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\" aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"okLabel\": \"@mdpOkLabel\",\n            \"cancelLabel\": \"@mdpCancelLabel\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\"\n        },\n        link: {\n            pre: function(scope, element, attrs, ngModel, $transclude) {\n\n            },\n            post: function(scope, element, attrs, ngModel, $transclude) {\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n                $transclude(function(clone) {\n                   inputContainer.append(clone);\n                });\n\n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n                scope.type = scope.dateFormat ? \"text\" : \"date\"\n                scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n                scope.model = ngModel;\n\n                scope.isError = function() {\n                    return !ngModel.$pristine && !!ngModel.$invalid;\n                };\n\n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && moment(value);\n                    if(date && date.isValid())\n                        updateInputElement(date.format(scope.dateFormat));\n                });\n\n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(viewValue, scope.dateFormat);\n                };\n\n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(viewValue, scope.dateFormat, scope.minDate);\n                };\n\n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\n                };\n\n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\n                };\n\n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = moment(value, scope.dateFormat, true);\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = moment(ngModel.$modelValue);\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n\n                            parsed = originalModel;\n                        }\n                        return parsed.toDate();\n                    } else\n                        return angular.isDate(ngModel.$modelValue) ? ngModel.$modelValue : null;\n                });\n\n                // update input element value\n                function updateInputElement(value) {\n                    if(ngModel.$valid)\n                        inputElement[0].size = value.length + 1;\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n\n                function updateDate(date) {\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n                        strValue = value.format(scope.dateFormat);\n\n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(strValue);\n                    } else {\n                        updateInputElement(date);\n                        ngModel.$setViewValue(date);\n                    }\n\n                    if(!ngModel.$pristine &&\n                        messages.hasClass(\"md-auto-hide\") &&\n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                    ngModel.$render();\n                }\n\n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                        minDate: scope.minDate,\n                        okLabel: scope.okLabel,\n                        cancelLabel: scope.cancelLabel,\n                        maxDate: scope.maxDate,\n                        dateFilter: scope.dateFilter,\n                        targetEvent: ev\n            \t    }).then(updateDate);\n                };\n\n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewVaue)\n                        updateDate(event.target.value);\n                }\n\n                inputElement.on(\"reset input blur\", onInputElementEvents);\n\n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                })\n            }\n        }\n    };\n}]);\n\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(viewValue, scope.format);\n            };\n\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(viewValue, scope.format, scope.minDate);\n            };\n\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\n            };\n\n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\n            };\n\n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n            \t    minDate: scope.minDate,\n            \t    maxDate: scope.maxDate,\n            \t    dateFilter: scope.dateFilter,\n            \t    targetEvent: ev\n        \t    }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n/* global moment, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, $mdMedia, options) {\n    $scope.options = options;\n\n\tvar self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = moment(time);\n    this.autoSwitch = !!autoSwitch;\n    console.log(autoSwitch);\n\n    this.clockHours = parseInt(this.time.format(\"h\"));\n    this.clockMinutes = parseInt(this.time.minutes());\n\n\t$scope.$mdMedia = $mdMedia;\n\n\tthis.switchView = function() {\n\t    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n\t};\n\n\tthis.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n\t};\n\n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n\t};\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    var self = this;\n\n    this.STEP_DEG = 360 / 12;\n    this.steps = [];\n\n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n\n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return {\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n\n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n\n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n\n    this.setTime = function(time, type) {\n        this.selected = time;\n\n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n\n    };\n\n    this.init = function() {\n        self.type = self.type || \"hours\";\n        switch(self.type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = self.time.hours() || 0;\n                if(self.selected > 12) self.selected -= 12;\n\n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n\n                break;\n        }\n    };\n\n    this.init();\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n\n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            };\n\n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n\n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\", onEvent);\n            });\n\n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent);\n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\";\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    var defaultOptions = {\n        okLabel: LABEL_OK,\n        cancelLabel: LABEL_CANCEL\n    };\n\n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(time, options) {\n            if(!angular.isDate(time)) time = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            options = angular.extend(defaultOptions, options);\n\n            options.am = moment.localeData().meridiem(11);\n            options.pm = moment.localeData().meridiem(13);\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'time', 'autoSwitch', '$mdMedia', 'options', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' +\n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">{{ options.am }}</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">{{ options.pm }}</span>' +\n                                    '</div>' +\n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n\n                                    '<md-dialog-actions layout=\"row\">' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"{{ options.cancelLabel }}\">{{ options.cancelLabel }}</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"{{ options.okLabel }}\">{{ options.okLabel }}</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch,\n                    options: options\n                },\n                skipHide: true\n            });\n        };\n\n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n\n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\" aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"okLabel\": \"@mdpOkLabel\",\n            \"cancelLabel\": \"@mdpCancelLabel\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n            $transclude(function(clone) {\n               inputContainer.append(clone);\n            });\n\n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n            scope.type = scope.timeFormat ? \"text\" : \"time\"\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch || false;\n\n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n\n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && moment(value);\n                if(time && time.isValid())\n                    updateInputElement(time.format(scope.timeFormat));\n            });\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n\n            ngModel.$parsers.unshift(function(value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n\n                        parsed = originalModel;\n                    }\n                    return parsed.toDate();\n                } else\n                    return angular.isDate(ngModel.$modelValue) ? ngModel.$modelValue : null;\n            });\n\n            // update input element value\n            function updateInputElement(value) {\n                if(ngModel.$valid)\n                    inputElement[0].size = value.length + 1;\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n\n            function updateTime(time) {\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n                    strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n\n                if(!ngModel.$pristine &&\n                    messages.hasClass(\"md-auto-hide\") &&\n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                ngModel.$render();\n            }\n\n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    okLabel: scope.okLabel,\n                    cancelLabel: scope.cancelLabel,\n                    autoSwitch: scope.autoSwitch\n                }).then(function(time) {\n                    updateTime(time, true);\n                });\n            };\n\n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n\n            inputElement.on(\"reset input blur\", onInputElementEvents);\n\n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            })\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"okLabel\": \"@mdpOkLabel\",\n            \"cancelLabel\": \"@mdpCancelLabel\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n})();"],"sourceRoot":"/source/"}