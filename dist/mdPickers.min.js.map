{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$rootScope","$scope","$mdPanel","$mdMedia","$timeout","currentDate","options","mdPanelRef","$window","self","this","_mdPanelRef","date","moment","minDate","isValid","maxDate","displayFormat","dateFilter","angular","isFunction","selectingYear","onWindowResize","element","off","cancel","on","$on","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cleanUpTrackedPanels","panelRef","_$mdPanel","_trackedPanels","mdpDatePicker","close","then","config","openFrom","currentTarget","focus","e","console","log","destroy","confirm","locals","onClose","toDate","animating","noop","CalendarCtrl","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","firstDay","day","length","arr","i","value","enabled","isDayEnabled","push","selectDate","dom","selectDateDblClick","doubleClick","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","formatValidator","format","isDate","minDateValidator","isSameOrAfter","maxDateValidator","isSameOrBefore","filterValidator","filter","TimePickerCtrl","$mdDialog","time","autoSwitch","VIEW_HOURS","VIEW_MINUTES","currentView","clockHours","parseInt","clockMinutes","minutes","switchView","setAM","hours","hour","setPM","mdpTimePicker","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","getPointerStyle","divider","type","degrees","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","init","module","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","directive","$mdUtil","restrict","priority","compile","inputContainer","getClosest","toggleClass","provider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","$get","_mdPanel","datePicker","cb","trackedPanels","removePanel","openPanel","open","sameInitiator","event1","event2","previousParent","parentElement","currentParent","Date","now","isObject","targetEvent","position","newPanelPosition","relativeTo","addPanelPosition","xPosition","CENTER","yPosition","BELOW","ALIGN_START","ALIGN_END","OFFSET_START","OFFSET_END","ABOVE","panelAnimation","newPanelAnimation","closeTo","withAnimation","animation","SCALE","attachTo","document","body","controller","controllerAs","template","clickOutsideToClose","escapeToClose","focusOnOpen","trapFocus","zIndex","$animate","bindToController","link","scope","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","transclude","noFloat","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","mdpDisabled","dateFormat","disabled","pre","ngModel","$transclude","post","updateInputElement","inputElement","inputContainerCtrl","setHasValue","$isEmpty","updateDate","strValue","$setViewValue","$pristine","messages","hasClass","$render","onInputElementEvents","event","target","$viewVaue","clone","append","model","isError","$invalid","$formatters","unshift","$validators","modelValue","viewValue","required","isUndefined","$parsers","parsed","$modelValue","originalModel","month","showPicker","ev","find","replace","timepickerCtrl","$parent","timepicker","onEvent","containerCoords","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","timePicker","skipHide","$mdpTimePicker","timeFormat","updateTime","$error","setInvalid","Object","keys","seconds"],"mappings":"CAAA,WACA,YA8DA,SAASA,GAAeC,EAAYC,EAAQC,EAAUC,EAAUC,EAAUC,EAAaC,EAASC,EAAYC,GACxG,GAAIC,GAAOC,IAEXA,MAAKC,YAAcJ,EACnBG,KAAKE,KAAOC,OAAOR,GACnBK,KAAKI,QAAUR,EAAQQ,SAAWD,OAAOP,EAAQQ,SAASC,UAAYF,OAAOP,EAAQQ,SAAW,KAChGJ,KAAKM,QAAUV,EAAQU,SAAWH,OAAOP,EAAQU,SAASD,UAAYF,OAAOP,EAAQU,SAAW,KAChGN,KAAKO,cAAgBX,EAAQW,eAAiB,cAC9CP,KAAKQ,WAAaC,QAAQC,WAAWd,EAAQY,YAAcZ,EAAQY,WAAa,KAChFR,KAAKW,eAAgB,EAErBX,KAAKY,eAAiB,WAClBH,QAAQI,QAAQf,GAASgB,IAAI,SAAUd,KAAKY,gBAC5Cb,EAAKgB,UAGTN,QAAQI,QAAQf,GAASkB,GAAG,SAAUhB,KAAKY,gBAE3CtB,EAAW2B,IAAI,oBAAqB,WAChClB,EAAKgB,WAGTzB,EAAW2B,IAAI,yBAA0B,WACrClB,EAAKgB,WAKRf,KAAKI,SAAWJ,KAAKM,SACpBN,KAAKM,QAAQY,SAASlB,KAAKI,WAC9BJ,KAAKM,QAAUH,OAAOH,KAAKI,SAASe,IAAI,EAAG,SAIzCnB,KAAKE,OAEDF,KAAKI,SAAWJ,KAAKE,KAAKgB,SAASlB,KAAKI,WAC9CJ,KAAKE,KAAOC,OAAOH,KAAKI,UAIlBJ,KAAKM,SAAWN,KAAKE,KAAKkB,QAAQpB,KAAKM,WAC7CN,KAAKE,KAAOC,OAAOH,KAAKM,WAI1BN,KAAKqB,WACEC,cAAe,EACfC,UAAW,EACXC,MAAQzB,EAAKK,QAAUL,EAAKK,QAAQqB,OAAS,KAC7CC,IAAM3B,EAAKO,QAAUP,EAAKO,QAAQmB,OAAS,EAC3CE,eAAgB,SAASC,GAIxB,MAHG5B,MAAKsB,cAAgBM,IACjB5B,KAAKsB,cAAgBM,GAErB5B,KAAKwB,MAAQI,GAErBC,UAAW,WACP,MAAOC,MAAKC,IACR/B,KAAKsB,cAAgBQ,KAAKE,MAAMhC,KAAKuB,UAAY,GACjDO,KAAKG,IAAIjC,KAAKwB,MAAQxB,KAAK0B,KAAO,KAK9CnC,EAAOE,SAAWA,EAClBF,EAAOkC,KAAOzB,KAAKE,KAAKuB,OAE3BzB,KAAKkC,WAAa,SAAST,GACpB1B,EAAKG,KAAKuB,KAAKA,GACflC,EAAOkC,KAAOA,EACd1B,EAAKY,eAAgB,EACrBZ,EAAKoC,WAGTnC,KAAKoC,SAAW,WACZrC,EAAKsC,aAAgBtC,EAAKG,KAAKuB,OAAS1B,EAAKsB,UAAUG,MAASM,KAAKE,MAAMjC,EAAKsB,UAAUE,UAAY,GACtGxB,EAAKsB,UAAUC,cAAiBvB,EAAKG,KAAKuB,OAAS1B,EAAKsB,UAAUG,MAAS,EAC3EzB,EAAKY,eAAgB,GAGzBX,KAAKsC,aAAe,WAChBvC,EAAKY,eAAgB,GAGzBX,KAAKuC,qBAAuB,SAASC,GAC7BA,EAASC,UAAUC,eAAeC,qBAC3BH,GAASC,UAAUC,eAAeC,eAIjD3C,KAAKe,OAAS,WACV,GAAIyB,GAAWxC,KAAKC,YAChBF,EAAOC,IAEXwC,IAAYA,EAASI,QAAQC,KAAK,WAC9B,IACIpC,QAAQI,QAAQ2B,EAASM,OAAOC,SAASC,eAAeC,QACxDlD,EAAKwC,qBAAqBC,GAC5B,MAAMU,GACJC,QAAQC,IAAI,uBAAyBF,GACvC,QACEV,EAASa,cAOrBrD,KAAKsD,QAAU,WACd,GAAIpD,GAAOH,EAAKG,KACTsC,EAAWzC,EAAKE,WAGnBF,GAAKK,SAAWL,EAAKG,KAAKgB,SAASnB,EAAKK,WAC3CF,EAAOC,OAAOH,KAAKI,UAGhBL,EAAKO,SAAWP,EAAKG,KAAKkB,QAAQrB,EAAKO,WAC1CJ,EAAOC,OAAOJ,EAAKO,UAGjBkC,GAAYA,EAASI,QAAQC,KAAK,WAC9B,IACIpC,QAAQI,QAAQ2B,EAASM,OAAOC,SAASC,eAAeC,QACxDT,EAASM,OAAOS,OAAOC,QAAQtD,EAAKuD,UACpC1D,EAAKwC,qBAAqBC,GAC5B,MAAMU,GACJC,QAAQC,IAAI,4BACd,QAEEZ,EAASa,cAQrBrD,KAAKmC,QAAU,WACXpC,EAAK2D,WAAY,EACjBhE,EAASe,QAAQkD,MAAMd,KAAK,WACxB9C,EAAK2D,WAAY,KAqI7B,QAASE,GAAarE,GACrB,GAAIQ,GAAOC,IACXA,MAAK6D,IAAM1D,OAAO2D,aAAaC,iBAE5B/D,KAAKgE,YAAcC,OACf9D,OAAO+D,cAAcC,MACjBnE,KAAK6D,KAET1D,OAAO+D,cAAcC,MACjB,EACAnE,KAAK6D,MAIb7D,KAAKoE,eAELpE,KAAKqE,eAAiB,WAClB,GAAIC,GAAOvE,EAAKG,KAAKkE,cACjBG,EAAWpE,OAAOJ,EAAKG,MAAMA,KAAK,GAAGsE,MAAQxE,KAAK6D,GAEnDU,GAAW,IAAGA,EAAWvE,KAAKgE,SAASS,OAAS,EAInD,KAAI,GADAC,MACIC,EAAI,EAAGA,GAAMJ,EAAWD,EAAOK,IAAK,CACxC,GAAIH,GAAM,IACPG,GAAIJ,IACHC,GACII,MAAQD,EAAIJ,EACZM,QAAS9E,EAAK+E,aAAa3E,OAAOJ,EAAKG,MAAMA,KAAKyE,EAAIJ,GAAUd,YAGxEiB,EAAIK,KAAKP,GAGb,MAAOE,IAGX1E,KAAK8E,aAAe,SAASN,GACzB,QAASxE,KAAKI,WAAWJ,KAAKI,SAAWoE,IACnCxE,KAAKM,WAAWN,KAAKM,SAAWkE,IAChCzE,EAAKS,YAAeT,EAAKS,WAAWgE,KAG9CxE,KAAKgF,WAAa,SAASC,GACvBlF,EAAKG,KAAKA,KAAK+E,IAGnBjF,KAAKkF,mBAAqB,SAASD,GAC/BlF,EAAKG,KAAKA,KAAK+E,GACXjF,KAAKmF,aACLnF,KAAKmF,eAKbnF,KAAKoF,UAAY,WACbrF,EAAKG,KAAKiB,IAAI,EAAG,WAGrBnB,KAAKqF,UAAY,WACbtF,EAAKG,KAAKoF,SAAS,EAAG,WAG1BtF,KAAKuF,kBAAoB,WACrBxF,EAAKqE,YAAcrE,EAAKsE,kBAG5B9E,EAAOiG,OAAO,WAAa,MAAQzF,GAAKG,KAAKuF,QAAU,SAASC,EAAUC,GACnED,GAAYA,IAAaC,GACxB5F,EAAKwF,sBAGbxF,EAAKwF,oBA2DT,QAASK,GAAgBhB,EAAOiB,GAC5B,OAAQjB,GAASnE,QAAQqF,OAAOlB,IAAUzE,OAAOyE,EAAOiB,GAAQ,GAAMxF,UAG1E,QAAS0F,GAAiBnB,EAAOiB,EAAQzF,GACrC,GAAIA,GAAUD,OAAOC,EAAS,cAAc,GACxCF,EAAOO,QAAQqF,OAAOlB,GAASzE,OAAOyE,GAAUzE,OAAOyE,EAAOiB,GAAQ,EAE1E,QAAQjB,GACAnE,QAAQqF,OAAOlB,KACdxE,EAAQC,WACTH,EAAK8F,cAAc5F,GAG/B,QAAS6F,GAAiBrB,EAAOiB,EAAQvF,GACrC,GAAIA,GAAUH,OAAOG,EAAS,cAAc,GACxCJ,EAAOO,QAAQqF,OAAOlB,GAASzE,OAAOyE,GAAUzE,OAAOyE,EAAOiB,GAAQ,EAE1E,QAAQjB,GACAnE,QAAQqF,OAAOlB,KACdtE,EAAQD,WACTH,EAAKgG,eAAe5F,GAGhC,QAAS6F,GAAgBvB,EAAOiB,EAAQO,GACpC,GAAIlG,GAAOO,QAAQqF,OAAOlB,GAASzE,OAAOyE,GAAUzE,OAAOyE,EAAOiB,GAAQ,EAE1E,QAAQjB,GACAnE,QAAQqF,OAAOlB,KACdnE,QAAQC,WAAW0F,KACnBA,EAAOlG,GA+MpB,QAASmG,GAAe/G,EAAYC,EAAQ+G,EAAWC,EAAMC,EAAY/G,EAAUI,EAAYC,GAC9F,GAAIC,GAAOC,IAERA,MAAKC,YAAcJ,EACnBG,KAAKyG,WAAa,EAClBzG,KAAK0G,aAAe,EACpB1G,KAAK2G,YAAc3G,KAAKyG,WACxBzG,KAAKuG,KAAOpG,OAAOoG,GACnBvG,KAAKwG,aAAeA,EAEpBxG,KAAKY,eAAiB,WAClBH,QAAQI,QAAQf,GAASgB,IAAI,SAAUd,KAAKY,gBAC5Cb,EAAKgB,UAGTN,QAAQI,QAAQf,GAASkB,GAAG,SAAUhB,KAAKY,gBAE3CtB,EAAW2B,IAAI,oBAAqB,WAChClB,EAAKgB,WAGTzB,EAAW2B,IAAI,yBAA0B,WACrClB,EAAKgB,WAITf,KAAK4G,WAAaC,SAAS7G,KAAKuG,KAAKV,OAAO,MAC5C7F,KAAK8G,aAAeD,SAAS7G,KAAKuG,KAAKQ,WAE1CxH,EAAOE,SAAWA,EAElBO,KAAKgH,WAAa,WACdjH,EAAK4G,YAAc5G,EAAK4G,aAAe5G,EAAK0G,WAAa1G,EAAK2G,aAAe3G,EAAK0G,YAGtFzG,KAAKiH,MAAQ,WACHlH,EAAKwG,KAAKW,SAAW,IACpBnH,EAAKwG,KAAKY,KAAKpH,EAAKwG,KAAKY,OAAS,KAG1CnH,KAAKoH,MAAQ,WACNrH,EAAKwG,KAAKW,QAAU,IACnBnH,EAAKwG,KAAKY,KAAKpH,EAAKwG,KAAKY,OAAS,KAG1CnH,KAAKuC,qBAAuB,SAASC,GAC7BA,EAASC,UAAUC,eAAe2E,qBAC3B7E,GAASC,UAAUC,eAAe2E,eAIjDrH,KAAKe,OAAS,WACV,GAAIyB,GAAWxC,KAAKC,YAChBF,EAAOC,IAEXwC,IAAYA,EAASI,QAAQC,KAAK,WAC9B,IACIpC,QAAQI,QAAQ2B,EAASM,OAAOC,SAASC,eAAeC,QACxDlD,EAAKwC,qBAAqBC,GAC5B,MAAMU,GACJC,QAAQC,IAAI,uBAAyBF,GACvC,QACEV,EAASa,cAMrBrD,KAAKsD,QAAU,WACX,GAAIiD,GAAOxG,EAAKwG,KACZ/D,EAAWzC,EAAKE,WAEpBuC,IAAYA,EAASI,QAAQC,KAAK,WAC9B,IACIpC,QAAQI,QAAQ2B,EAASM,OAAOC,SAASC,eAAeC,QACxDT,EAASM,OAAOS,OAAOC,QAAQ+C,EAAK9C,UACpC1D,EAAKwC,qBAAqBC,GAC5B,MAAMU,GACJC,QAAQC,IAAI,4BACd,QAEEZ,EAASa,cAOzB,QAASiE,GAAU/H,GACf,GAAIgI,GAAa,QACbC,EAAe,UACfzH,EAAOC,IAEXA,MAAKyH,SAAW,GAChBzH,KAAK0H,SAEL1H,KAAK2H,aACDT,OACIU,MAAO,IAEXb,SACIa,MAAO,KAIf5H,KAAK6H,gBAAkB,WACnB,GAAIC,GAAU,CACd,QAAO/H,EAAKgI,MACR,IAAKR,GACDO,EAAU,EACV,MACJ,KAAKN,GACDM,EAAU,GAGlB,GAAIE,GAAUlG,KAAKmG,MAAMlI,EAAKmI,UAAY,IAAMJ,IAAY,GAC5D,QACIK,oBAAqB,UAAYH,EAAU,OAC3CI,gBAAiB,UAAYJ,EAAU,OACvCK,UAAa,UAAYL,EAAU,SAI3ChI,KAAKsI,aAAe,SAASC,GACzBA,EAAMA,GAAO,IAAM,EAAIA,CACvB,IAAIT,GAAU,CACd,QAAO/H,EAAKgI,MACR,IAAKR,GACDO,EAAU,EACV,MACJ,KAAKN,GACDM,EAAU,GAIlB/H,EAAKyI,QACD1G,KAAKmG,MAAMH,EAAU,IAAMS,KAInCvI,KAAKwI,QAAU,SAASjC,EAAMwB,GAG1B,OAFA/H,KAAKkI,SAAW3B,EAETxG,EAAKgI,MACR,IAAKR,GAC2B,MAAzBxH,EAAKwG,KAAKV,OAAO,OAAcU,GAAQ,IAC1CvG,KAAKuG,KAAKW,MAAMX,EAChB,MACJ,KAAKiB,GACEjB,EAAO,KAAIA,GAAQ,IACtBvG,KAAKuG,KAAKQ,QAAQR,KAM9BvG,KAAKyI,KAAO,WAER,OADA1I,EAAKgI,KAAOhI,EAAKgI,MAAQ,QAClBhI,EAAKgI,MACR,IAAKR,GACD,IAAI,GAAI5C,GAAI,EAAGA,GAAK,GAAIA,IACpB5E,EAAK2H,MAAM3C,KAAKJ,EACpB5E,GAAKmI,SAAWnI,EAAKwG,KAAKW,SAAW,EAClCnH,EAAKmI,SAAW,KAAInI,EAAKmI,UAAY,GAExC,MACJ,KAAKV,GACD,IAAI,GAAI7C,GAAI,EAAGA,GAAK,GAAIA,GAAG,EACvB5E,EAAK2H,MAAM3C,KAAKJ,EACpB5E,GAAK2H,MAAM3C,KAAK,GAChBhF,EAAKmI,SAAWnI,EAAKwG,KAAKQ,WAAa,IAMnD/G,KAAKyI,OA/2BT,GAAIC,GAASjI,QAAQiI,OAAO,aAC3B,aACA,YACA,UAGDA,GAAO5F,QAAQ,kBAAmB,mBAAoB,SAAS6F,EAAiBC,GAC/EnI,QAAQoI,QAAQD,EAAkB,SAASE,EAAMlH,GAChD+G,EAAgBG,KAAKA,EAAKC,GAAID,EAAKE,UAIrCN,EAAOO,KAAK,iBAAkB,mBAAoB,SAASC,EAAgBN,GAC1EnI,QAAQoI,QAAQD,EAAkB,SAASE,EAAMlH,GAChDsH,EAAeC,IAAIL,EAAKE,IAAKF,EAAKM,UAGpCV,EAAOW,SAAS,qBAERN,GAAI,mBACJC,IAAK,uBACLI,IAAK,4LAGLL,GAAI,oBACJC,IAAK,wBACLI,IAAK,6LAGLL,GAAI,kBACJC,IAAK,sBACLI,IAAK,kVAGLL,GAAI,YACJC,IAAK,gBACLI,IAAK,wRAGbV,EAAOY,UAAU,aAAc,UAAW,SAASC,GAChD,OACKC,SAAU,KACVC,SAAU,IACVC,QAAS,SAAS7I,GACd,GAAI8I,GAAiBJ,EAAQK,WAAW/I,EAAS,mBAAmB,IAC/C0I,EAAQK,WAAW/I,EAAS,mBAAmB,EAGpE,IAAK8I,EAKL,MAFA9I,GAAQgJ,YAAY,8BAA8B,WA2J9DnB,EAAOoB,SAAS,iBAAkB,WAC9B,GAAIC,GAAW,KACXC,EAAe,SACfC,EAAiB,aAErBjK,MAAKkK,iBAAmB,SAASrE,GAC7BoE,EAAiBpE,GAGrB7F,KAAKmK,iBAAmB,SAASC,GAC7BL,EAAWK,GAGfpK,KAAKqK,qBAAuB,SAASD,GACjCJ,EAAeI,GAGnBpK,KAAKsK,MAAQ,WAAY,SAAS9K,GAC9B,GAAI+K,GAAW/K,EAEfgL,EAAa,SAAS7K,EAAaC,EAAS6K,GACxC,GAAIC,GAAgBlL,EAASkD,eACzBiI,EAAc,WACXD,EAAc/H,cAAcU,gBACpBqH,GAAc/H,eAGzBiI,EAAY,WACRL,EAASM,KAAK/H,IAElBgI,EAAgB,SAASC,EAAQC,GAC7B,GAAIC,GAAiBF,EAAO/H,cAAckI,cACtCC,EAAgBH,EAAOhI,cAAckI,aAEzC,OAAOD,IAAkBE,EAG5B1K,SAAQqF,OAAOnG,KAAcA,EAAcyL,KAAKC,OAChD5K,QAAQ6K,SAAS1L,KAAUA,GAAW2L,YAAa,OAExD3L,EAAQW,cAAgB0J,CAExB,IAAIuB,GAAWjB,EAASkB,mBACfC,WAAW9L,EAAQ2L,YAAYvI,eAC/B2I,iBAAiBpB,EAASqB,UAAUC,OAAQtB,EAASuB,UAAUC,OAC/DJ,iBAAiBpB,EAASqB,UAAUI,YAAazB,EAASuB,UAAUC,OACpEJ,iBAAiBpB,EAASqB,UAAUK,UAAW1B,EAASuB,UAAUC,OAClEJ,iBAAiBpB,EAASqB,UAAUM,aAAc3B,EAASuB,UAAUC,OACrEJ,iBAAiBpB,EAASqB,UAAUO,WAAY5B,EAASuB,UAAUC,OAEnEJ,iBAAiBpB,EAASqB,UAAUC,OAAQtB,EAASuB,UAAUM,OAC/DT,iBAAiBpB,EAASqB,UAAUI,YAAazB,EAASuB,UAAUM,OACpET,iBAAiBpB,EAASqB,UAAUK,UAAW1B,EAASuB,UAAUM,OAClET,iBAAiBpB,EAASqB,UAAUM,aAAc3B,EAASuB,UAAUM,OACrET,iBAAiBpB,EAASqB,UAAUO,WAAY5B,EAASuB,UAAUM,OAExEC,EAAiB7M,EAAS8M,oBACrBvJ,SAASnD,EAAQ2L,YAAYvI,eAC7BuJ,QAAQ3M,EAAQ2L,YAAYvI,eAC5BwJ,cAAchN,EAASiN,UAAUC,OAEtC5J,GACIiG,GAAI,gBACJ4D,SAAUlM,QAAQI,QAAQ+L,SAASC,MACnCC,YAAc,aAAc,SAAU,WAAY,WAAY,WAAY,cAAe,UAAU,aAAc,UAAWzN,GAC5H0N,aAAc,aACdC,SAAY,89CAmB2EhD,EAAe,KAAOA,EAAe,yFACjBD,EAAW,KAAOA,EAAW,yDAKxIhH,SAAUnD,EAAQ2L,YAClBC,SAAUA,EACViB,UAAWJ,EACX9I,QACI5D,YAAaA,EACbC,QAASA,EACT4D,QAASiH,GAEbwC,qBAAqB,EACrBC,eAAe,EACfC,aAAa,EACbC,WAAW,EACXC,OAAQ,EAGhB,OAAI3C,GAAc/H,cAEVmI,EAAcJ,EAAc/H,cAAcG,OAAOC,SAAUnD,EAAQ2L,aAC5Db,EAAc/H,cAAcC,QAAQC,KAAK8H,GAI7CD,EAAc/H,cAAcC,QAAQC,KAAK8H,GAAa9H,KAAK+H,GAI/DA,IAIX,OAAOJ,OAmFf9B,EAAOY,UAAU,eAAgB,WAAY,SAASgE,GAClD,OACI9D,SAAU,IACV+D,kBACIrN,KAAQ,IACRE,QAAW,IACXE,QAAW,IACXE,WAAc,IACd2E,YAAe,KAEnB6H,SAAU,g+CAgBVF,YAAa,SAAUlJ,GACvBmJ,aAAc,WACdS,KAAM,SAASC,EAAO5M,EAAS6M,EAAOC,GAClC,GAAIC,IACA/M,EAAQ,GAAGgN,cAAc,2BACzBhN,EAAQ,GAAGgN,cAAc,sBACzBhN,EAAQ,GAAGgN,cAAc,4BAC3BC,IAAI,SAASC,GACZ,MAAOtN,SAAQI,QAAQkN,IAG1BN,GAAMjI,OAAO,WAAa,MAAQmI,GAAKzN,KAAK2F,OAAO,WAAa,SAASH,EAAUC,GAC/E,GAAIqI,GAAY,IAOhB,IALGtI,EAAWC,EACVqI,EAAY,mBACRtI,EAAWC,IACfqI,EAAY,oBAEbA,EACC,IAAI,GAAIrJ,KAAKiJ,GACTA,EAAajJ,GAAGsJ,SAASD,GACzBV,EAASY,YAAYN,EAAajJ,GAAIqJ,UA6C9DtF,EAAOY,UAAU,iBAAkB,iBAAkB,WAAY,SAAS6E,EAAgBzO,GACtF,OACI8J,SAAU,IACV4E,QAAS,UACTC,YAAY,EACZrB,SAAU,SAASnM,EAAS6M,GACxB,GAAIY,GAAU7N,QAAQ8N,UAAUb,EAAMc,YAClCC,EAAchO,QAAQ8N,UAAUb,EAAMgB,gBAAkBhB,EAAMgB,eAAiB,GAC/EC,IAAclO,QAAQ8N,UAAUb,EAAMkB,eAE1C,OAAO,qDACiBnO,QAAQ8N,UAAUb,EAAMmB,aAAe,0BAA4B,IAAM,oIAGhEP,EAAU,eAAiB,IAAM,uDACtB7N,QAAQ8N,UAAUb,EAAMmB,aAAe,0BAA4B,IAAM,gBAAkBJ,EAAc,kBAAoBA,EAAc,KAAOE,EAAc,kCAAoC,IAAM,kCAI1PlB,OACIrN,QAAW,cACXE,QAAW,cACXE,WAAc,iBACdsO,WAAc,aACdL,YAAe,kBACfH,QAAW,cACXK,YAAe,kBACfI,SAAY,iBAEhBvB,MACIwB,IAAK,SAASvB,EAAO5M,EAAS6M,EAAOuB,EAASC,KAG9CC,KAAM,SAAS1B,EAAO5M,EAAS6M,EAAOuB,EAASC,GAiE3C,QAASE,GAAmBxK,GACxByK,EAAa,GAAGzK,MAAQA,EACxB0K,EAAmBC,aAAaN,EAAQO,SAAS5K,IAGrD,QAAS6K,GAAWvP,GAChB,GAAI0E,GAAQzE,OAAOD,EAAMO,QAAQqF,OAAO5F,GAAQ,KAAOuN,EAAMqB,YAAY,GACrEY,EAAW9K,EAAMiB,OAAO4H,EAAMqB,WAE/BlK,GAAMvE,WACL+O,EAAmBM,GACnBT,EAAQU,cAAcD,KAEtBN,EAAmBlP,GACnB+O,EAAQU,cAAczP,KAGtB+O,EAAQW,WACRC,EAASC,SAAS,iBAClBnG,EAAemG,SAAS,qBAAqBD,EAAS3B,YAAY,gBAEtEe,EAAQc,UAcZ,QAASC,GAAqBC,GACvBA,EAAMC,OAAOtL,QAAUqK,EAAQkB,WAC9BV,EAAWQ,EAAMC,OAAOtL,OArGhC,GAAIyK,GAAe5O,QAAQI,QAAQA,EAAQ,GAAGgN,cAAc,UACxDlE,EAAiBlJ,QAAQI,QAAQA,EAAQ,GAAGgN,cAAc,uBAC1DyB,EAAqB3F,EAAemD,WAAW,mBAEnDoC,GAAY,SAASkB,GAClBzG,EAAe0G,OAAOD,IAGzB,IAAIP,GAAWpP,QAAQI,QAAQ8I,EAAe,GAAGkE,cAAc,iBAE/DJ,GAAM1F,KAAO0F,EAAMqB,WAAa,OAAS,OACzCrB,EAAMqB,WAAarB,EAAMqB,YAAc,aACvCrB,EAAM6C,MAAQrB,EAEdxB,EAAM8C,QAAU,WACZ,OAAQtB,EAAQW,aAAeX,EAAQuB,UAI3CvB,EAAQwB,YAAYC,QAAQ,SAAS9L,GACjC,GAAI1E,GAAOO,QAAQqF,OAAOlB,IAAUzE,OAAOyE,EAEvCwK,GADDlP,GAAQA,EAAKG,UACOH,EAAK2F,OAAO4H,EAAMqB,YAElB,QAG3BG,EAAQ0B,YAAY9K,OAAS,SAAS+K,EAAYC,GAC9C,MAAOjL,GAAgBiL,EAAWpD,EAAMqB,aAG5CG,EAAQ0B,YAAYvQ,QAAU,SAASwQ,EAAYC,GAC/C,MAAO9K,GAAiB8K,EAAWpD,EAAMqB,WAAYrB,EAAMrN,UAG/D6O,EAAQ0B,YAAYrQ,QAAU,SAASsQ,EAAYC,GAC/C,MAAO5K,GAAiB4K,EAAWpD,EAAMqB,WAAYrB,EAAMnN,UAG/D2O,EAAQ0B,YAAYvK,OAAS,SAASwK,EAAYC,GAC9C,MAAO1K,GAAgB0K,EAAWpD,EAAMqB,WAAYrB,EAAMjN,aAG9DyO,EAAQ0B,YAAYG,SAAW,SAASF,EAAYC,GAChD,MAAOpQ,SAAQsQ,YAAYrD,EAAMoD,YAAc7B,EAAQO,SAASoB,KAAgB3B,EAAQO,SAASqB,IAGrG5B,EAAQ+B,SAASN,QAAQ,SAAS9L,GAC9B,GAAIqM,GAAS9Q,OAAOyE,EAAO6I,EAAMqB,YAAY,EAC7C,IAAGmC,EAAO5Q,UAAW,CACjB,GAAGI,QAAQqF,OAAOmJ,EAAQiC,aAAc,CACpC,GAAIC,GAAgBhR,OAAO8O,EAAQiC,YACnCC,GAAc1P,KAAKwP,EAAOxP,QAC1B0P,EAAcC,MAAMH,EAAOG,SAC3BD,EAAcjR,KAAK+Q,EAAO/Q,QAE1B+Q,EAASE,EAEb,MAAOF,GAAOxN,SAEd,MAAO,QA4BfgK,EAAM4D,WAAa,SAASC,GACxBnD,EAAec,EAAQiC,aACtB9Q,QAASqN,EAAMrN,QACfE,QAASmN,EAAMnN,QACfE,WAAYiN,EAAMjN,WAClB+K,YAAa+F,GACd7B,GAEAhP,QAAQI,QAAQyQ,EAAGtO,cAAckI,eAAeqG,KAAK,SAAStO,SAQlEoM,EAAarO,GAAG,mBAAoBgP,GAEpCvC,EAAMxM,IAAI,WAAY,WAClBoO,EAAavO,IAAI,mBAAoBkP,WAQzDtH,EAAOY,UAAU,iBAAkB,iBAAkB,WAAY,SAAS6E,EAAgBzO,GACtF,OACI8J,SAAU,IACV4E,QAAS,UACTX,OACIrN,QAAW,OACXE,QAAW,OACXE,WAAc,iBACdsO,WAAc,cAElBtB,KAAM,SAASC,EAAO5M,EAAS6M,EAAOuB,EAASC,GAmB3C,QAASmC,GAAWC,GAChBnD,EAAec,EAAQiC,aACtB9Q,QAASqN,EAAMrN,QACfE,QAASmN,EAAMnN,QACfE,WAAYiN,EAAMjN,WAClB+K,YAAa+F,IACdzO,KAAK,SAAS0D,GACV0I,EAAQU,cAAcxP,OAAOoG,GAAMV,OAAO4H,EAAM5H,SAChDoJ,EAAQc,YA1BhBtC,EAAMqB,WAAarB,EAAMqB,YAAc,aAEvCG,EAAQ0B,YAAY9K,OAAS,SAAS+K,EAAYC,GAC9C,MAAOjL,GAAgBiL,EAAWpD,EAAM5H,SAG5CoJ,EAAQ0B,YAAYvQ,QAAU,SAASwQ,EAAYC,GAC/C,MAAO9K,GAAiB8K,EAAWpD,EAAM5H,OAAQ4H,EAAMrN,UAG3D6O,EAAQ0B,YAAYrQ,QAAU,SAASsQ,EAAYC,GAC/C,MAAO5K,GAAiB4K,EAAWpD,EAAM5H,OAAQ4H,EAAMnN,UAG3D2O,EAAQ0B,YAAYvK,OAAS,SAASwK,EAAYC,GAC9C,MAAO1K,GAAgB0K,EAAWpD,EAAM5H,OAAQ4H,EAAMjN,aAe1DK,EAAQG,GAAG,QAASqQ,GAEpB5D,EAAMxM,IAAI,WAAY,WAClBJ,EAAQC,IAAI,QAASuQ,UA0LrC3I,EAAOY,UAAU,YAAa,WAAY,WAAY,SAASgE,EAAU5N,GACrE,OACI8J,SAAU,IACV+D,kBACIxF,KAAQ,KACRxB,KAAQ,IACRC,WAAc,MAElBgL,SAAS,EACTxE,SAAU,khBASVF,YAAa,SAAUxF,GACvByF,aAAc,QACdS,KAAM,SAASC,EAAO5M,EAAS6M,EAAOC,GAClC,GACI8D,IADUhR,QAAQI,QAAQA,EAAQ,GAAGgN,cAAc,iBAClCJ,EAAMiE,QAAQC,YAE/BC,EAAU,SAAS3B,GACnB,GAAI4B,GAAkB5B,EAAMjN,cAAc8O,iBAAiB,GACvDC,EAAM9B,EAAMjN,cAAcgP,YAAc,GAAM/B,EAAMgC,MAAQJ,EAAgBK,MAC5EC,EAAMlC,EAAMmC,MAAQP,EAAgBQ,IAAQpC,EAAMjN,cAAcsP,aAAe,EAE/E/J,EAAMzG,KAAKmG,MAAOnG,KAAKyQ,MAAMR,EAAGI,IAAM,IAAMrQ,KAAK0Q,IACrD9S,GAAS,WACLiO,EAAKrF,aAAaC,EAAM,KACrBoF,EAAKnH,aAAe,UAAW,SAASiM,QAAQxC,EAAMlI,YAAgB0J,GAAgBA,EAAezK,eAIhHnG,GAAQG,GAAG,YAAa,WACrBH,EAAQG,GAAG,YAAa4Q,KAG3B/Q,EAAQG,GAAG,UAAW,SAASkC,GAC3BrC,EAAQC,IAAI,eAGhBD,EAAQG,GAAG,QAAS4Q,GACpBnE,EAAMxM,IAAI,WAAY,WAClBJ,EAAQC,IAAI,QAAS8Q,GACrB/Q,EAAQC,IAAI,YAAa8Q,UAMzClJ,EAAOoB,SAAS,iBAAkB,WAC9B,GAAIC,GAAW,KACXC,EAAe,QAEnBhK,MAAKmK,iBAAmB,SAASC,GAC7BL,EAAWK,GAGfpK,KAAKqK,qBAAuB,SAASD,GACjCJ,EAAeI,GAGnBpK,KAAKsK,MAAQ,WAAY,SAAS9K,GAE9B,GAAI+K,GAAW/K,EAEfkT,EAAa,SAASnM,EAAM3G,EAAS6K,GACjC,GAAIC,GAAgBlL,EAASkD,eACzBiI,EAAc,WACXD,EAAcrD,cAAchE,gBACpBqH,GAAcrD,eAGzBuD,EAAY,WACRL,EAASM,KAAK/H,IAElBgI,EAAgB,SAASC,EAAQC,GAC7B,GAAIC,GAAiBF,EAAO/H,cAAckI,cACtCC,EAAgBH,EAAOhI,cAAckI,aAEzC,OAAOD,IAAkBE,EAG7B1K,SAAQqF,OAAOS,KAAOA,EAAO6E,KAAKC,OACjC5K,QAAQ6K,SAAS1L,KAAUA,KAEhC,IAAI4L,GAAWjB,EAASkB,mBACfC,WAAW9L,EAAQ2L,YAAYvI,eAC/B2I,iBAAiBpB,EAASqB,UAAUC,OAAQtB,EAASuB,UAAUC,OAC/DJ,iBAAiBpB,EAASqB,UAAUI,YAAazB,EAASuB,UAAUC,OACpEJ,iBAAiBpB,EAASqB,UAAUK,UAAW1B,EAASuB,UAAUC,OAClEJ,iBAAiBpB,EAASqB,UAAUM,aAAc3B,EAASuB,UAAUC,OACrEJ,iBAAiBpB,EAASqB,UAAUO,WAAY5B,EAASuB,UAAUC,OAEnEJ,iBAAiBpB,EAASqB,UAAUC,OAAQtB,EAASuB,UAAUM,OAC/DT,iBAAiBpB,EAASqB,UAAUI,YAAazB,EAASuB,UAAUM,OACpET,iBAAiBpB,EAASqB,UAAUK,UAAW1B,EAASuB,UAAUM,OAClET,iBAAiBpB,EAASqB,UAAUM,aAAc3B,EAASuB,UAAUM,OACrET,iBAAiBpB,EAASqB,UAAUO,WAAY5B,EAASuB,UAAUM,OAExEC,EAAiB7M,EAAS8M,oBACrBvJ,SAASnD,EAAQ2L,YAAYvI,eAC7BuJ,QAAQ3M,EAAQ2L,YAAYvI,eAC5BwJ,cAAchN,EAASiN,UAAUC,OAEtC5J,GACIiG,GAAI,gBACJ4D,SAAUlM,QAAQI,QAAQ+L,SAASC,MACnCC,YAAc,aAAc,SAAU,WAAY,OAAQ,aAAc,WAAY,aAAc,UAAWzG,GAC7G0G,aAAc,aACdC,SAAU,67CAoByEhD,EAAe,KAAOA,EAAe,yFACjBD,EAAW,KAAOA,EAAW,yDAKpIhH,SAAUnD,EAAQ2L,YAClBC,SAAUA,EACViB,UAAWJ,EACX9I,QACIgD,KAAMA,EACNC,WAAY5G,EAAQ4G,WACpBhD,QAASiH,GAEbkI,UAAU,EACV1F,qBAAqB,EACrBC,eAAe,EACfC,aAAa,EACbC,WAAW,EACXC,OAAQ,EAGhB,OAAI3C,GAAcrD,cAEVyD,EAAcJ,EAAcrD,cAAcvE,OAAOC,SAAUnD,EAAQ2L,aAC5Db,EAAcrD,cAAczE,QAAQC,KAAK8H,GAI7CD,EAAcrD,cAAczE,QAAQC,KAAK8H,GAAa9H,KAAK+H,GAI/DA,IAKX,OAAO8H,OAIfhK,EAAOY,UAAU,iBAAkB,iBAAkB,WAAY,SAASsJ,EAAgBlT,GACtF,OACI8J,SAAU,IACV4E,QAAS,UACTC,YAAY,EACZrB,SAAU,SAASnM,EAAS6M,GACxB,GAAIY,GAAU7N,QAAQ8N,UAAUb,EAAMc,YAClCC,EAAchO,QAAQ8N,UAAUb,EAAMgB,gBAAkBhB,EAAMgB,eAAiB,GAC/EC,IAAclO,QAAQ8N,UAAUb,EAAMkB,eAE1C,OAAO,0GACsEnO,QAAQ8N,UAAUb,EAAMmB,aAAe,0BAA4B,IAAM,qFAGrHP,EAAU,eAAiB,IAAM,uDACtB7N,QAAQ8N,UAAUb,EAAMmB,aAAe,0BAA4B,IAAM,gBAAkBJ,EAAc,kBAAoBA,EAAc,KAAOE,EAAc,kCAAoC,IAAM,kCAI1PlB,OACIoF,WAAc,aACdpE,YAAe,kBACfjI,WAAc,kBACduI,SAAY,iBAEhBvB,KAAM,SAASC,EAAO5M,EAAS6M,EAAOuB,EAASC,GAqD3C,QAASE,GAAmBxK,GACxByK,EAAa,GAAGzK,MAAQA,EACxB0K,EAAmBC,aAAaN,EAAQO,SAAS5K,IAGrD,QAASkO,GAAWvM,GAChB,GAAI3B,GAAQzE,OAAOoG,EAAM9F,QAAQqF,OAAOS,GAAQ,KAAOkH,EAAMoF,YAAY,GACrEnD,EAAW9K,EAAMiB,OAAO4H,EAAMoF,WAE/BjO,GAAMvE,WACL+O,EAAmBM,GACnBT,EAAQU,cAAcD,KAEtBN,EAAmB7I,GACnB0I,EAAQU,cAAcpJ,KAGtB0I,EAAQW,WACRC,EAASC,SAAS,iBAClBnG,EAAemG,SAAS,qBAAqBD,EAAS3B,YAAY,gBAEtEe,EAAQc,UAaZ,QAASC,GAAqBC,GACvBA,EAAMC,OAAOtL,QAAUqK,EAAQkB,WAC9B2C,EAAW7C,EAAMC,OAAOtL,OAxFhC,GAAIyK,GAAe5O,QAAQI,QAAQA,EAAQ,GAAGgN,cAAc,UACxDlE,EAAiBlJ,QAAQI,QAAQA,EAAQ,GAAGgN,cAAc,uBAC1DyB,EAAqB3F,EAAemD,WAAW,mBAEnDoC,GAAY,SAASkB,GAClBzG,EAAe0G,OAAOD,IAGzB,IAAIP,GAAWpP,QAAQI,QAAQ8I,EAAe,GAAGkE,cAAc,iBAE/DJ,GAAM1F,KAAO0F,EAAMoF,WAAa,OAAS,OACzCpF,EAAMoF,WAAapF,EAAMoF,YAAc,QACvCpF,EAAMjH,WAAaiH,EAAMjH,aAAc,EAEvCiH,EAAMjI,OAAO,WAAa,MAAOyJ,GAAQ8D,QAAU,SAASrN,EAAUC,GAClE2J,EAAmB0D,YAAY/D,EAAQW,aAAeqD,OAAOC,KAAKjE,EAAQ8D,QAAQtO,UACnF,GAGHwK,EAAQwB,YAAYC,QAAQ,SAAS9L,GACjC,GAAI2B,GAAO9F,QAAQqF,OAAOlB,IAAUzE,OAAOyE,EAEvCwK,GADD7I,GAAQA,EAAKlG,UACOkG,EAAKV,OAAO4H,EAAMoF,YAElB,QAG3B5D,EAAQ0B,YAAY9K,OAAS,SAAS+K,EAAYC,GAC9C,OAAQA,GAAapQ,QAAQqF,OAAO+K,IAAc1Q,OAAO0Q,EAAWpD,EAAMoF,YAAY,GAAMxS,WAGhG4O,EAAQ0B,YAAYG,SAAW,SAASF,EAAYC,GAChD,MAAOpQ,SAAQsQ,YAAYrD,EAAMoD,YAAc7B,EAAQO,SAASoB,KAAgB3B,EAAQO,SAASqB,IAGrG5B,EAAQ+B,SAASN,QAAQ,SAAS9L,GAC9B,GAAIqM,GAAS9Q,OAAOyE,EAAO6I,EAAMoF,YAAY,EAC7C,IAAG5B,EAAO5Q,UAAW,CACjB,GAAGI,QAAQqF,OAAOmJ,EAAQiC,aAAc,CACpC,GAAIC,GAAgBhR,OAAO8O,EAAQiC,YACnCC,GAAcpK,QAAQkK,EAAOlK,WAC7BoK,EAAcjK,MAAM+J,EAAO/J,SAC3BiK,EAAcgC,QAAQlC,EAAOkC,WAE7BlC,EAASE,EAEb,MAAOF,GAAOxN,SAEd,MAAO,QA4BfgK,EAAM4D,WAAa,SAASC,GACxBsB,EAAe3D,EAAQiC,aACnB3F,YAAa+F,EACb9K,WAAYiH,EAAMjH,YACnBsM,GAGHrS,QAAQI,QAAQyQ,EAAGtO,cAAckI,eAAeqG,KAAK,SAAStO,SAQlEoM,EAAarO,GAAG,mBAAoBgP,GAEpCvC,EAAMxM,IAAI,WAAY,WAClBoO,EAAavO,IAAI,mBAAoBkP,UAMrDtH,EAAOY,UAAU,iBAAkB,iBAAkB,WAAY,SAASsJ,EAAgBlT,GACtF,OACI8J,SAAU,IACV4E,QAAS,UACTX,OACIoF,WAAc,aACdrM,WAAc,mBAElBgH,KAAM,SAASC,EAAO5M,EAAS6M,EAAOuB,EAASC,GAE3C,QAASmC,GAAWC,GAChBsB,EAAe3D,EAAQiC,aACnB3F,YAAa+F,EACb9K,WAAYiH,EAAMjH,aACnB3D,KAAK,SAAS0D,GACb0I,EAAQU,cAAcxP,OAAOoG,GAAMV,OAAO4H,EAAM5H,SAChDoJ,EAAQc,YAPhBtC,EAAM5H,OAAS4H,EAAM5H,QAAU,QAW/BhF,EAAQG,GAAG,QAASqQ,GAEpB5D,EAAMxM,IAAI,WAAY,WAClBJ,EAAQC,IAAI,QAASuQ","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$mdIconProvider.icon(icon.id, icon.url);\n\t});\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$templateCache.put(icon.url, icon.svg);\n\t});\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n            \n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n            \n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n            \n            return {};\n        }\n    } \n}]);\n/* global moment, angular */\n\nfunction DatePickerCtrl($rootScope, $scope, $mdPanel, $mdMedia, $timeout, currentDate, options, mdPanelRef, $window) {\n    var self = this;\n\n    this._mdPanelRef = mdPanelRef;\n    this.date = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n\n    this.onWindowResize = function() {\n        angular.element($window).off('resize', this.onWindowResize);\n        self.cancel();\n    };\n\n    angular.element($window).on('resize', this.onWindowResize);\n\n    $rootScope.$on('$stateChangeStart', function(){\n        self.cancel();\n    });\n\n    $rootScope.$on('$locationChangeSuccess', function(){\n        self.cancel();\n    });\n    \n    \n    // validate min and max date\n\tif (this.minDate && this.maxDate) {\n\t\tif (this.maxDate.isBefore(this.minDate)) {\n\t\t\tthis.maxDate = moment(this.minDate).add(1, 'days');\n\t\t}\n\t}\n\t\n\tif (this.date) {\n\t\t// check min date\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n\t\t\tthis.date = moment(this.minDate);\n    \t}\n    \t\n    \t// check max date\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n\t\t\tthis.date = moment(this.maxDate);\n    \t}\n\t}\n\t\n\tthis.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n        \tif(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n        \t\n        \treturn this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n\tthis.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cleanUpTrackedPanels = function(panelRef) {\n        if (panelRef._$mdPanel._trackedPanels.mdpDatePicker) {\n            delete panelRef._$mdPanel._trackedPanels.mdpDatePicker;\n        }\n    };\n\n    this.cancel = function() {\n        var panelRef = this._mdPanelRef,\n            self = this;\n\n        panelRef && panelRef.close().then(function() {\n            try {\n                angular.element(panelRef.config.openFrom.currentTarget).focus();\n                self.cleanUpTrackedPanels(panelRef);\n            } catch(e){\n                console.log('Reference not found ' + e);\n            } finally {\n                panelRef.destroy();\n            }\n            \n        });\n    };\n\n\n    this.confirm = function() {\n    \tvar date = self.date,\n            panelRef = self._mdPanelRef;\n            \n    \t\n    \tif (self.minDate && self.date.isBefore(self.minDate)) {\n    \t\tdate = moment(this.minDate);\n    \t}\n    \t\n    \tif (self.maxDate && self.date.isAfter(self.maxDate)) {\n    \t\tdate = moment(self.maxDate);\n    \t}  \t\n    \t\n        panelRef && panelRef.close().then(function() {\n            try {\n                angular.element(panelRef.config.openFrom.currentTarget).focus()\n                panelRef.config.locals.onClose(date.toDate());\n                self.cleanUpTrackedPanels(panelRef);\n            } catch(e){ \n                console.log('No close function found.');\n            } finally {\n                \n                panelRef.destroy();    \n            }\n            \n        });\n\n\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\";\n        \n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;    \n    };\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.$get = [\"$mdPanel\", function($mdPanel) {\n        var _mdPanel = $mdPanel,\n\n        datePicker = function(currentDate, options, cb) {\n            var trackedPanels = $mdPanel._trackedPanels,\n                removePanel = function(){\n                   trackedPanels.mdpDatePicker.destroy();\n                    delete trackedPanels.mdpDatePicker;\n                    return;\n                },\n                openPanel = function(){\n                    _mdPanel.open(config);\n                },\n                sameInitiator = function(event1, event2) {\n                    var previousParent = event1.currentTarget.parentElement,\n                        currentParent = event2.currentTarget.parentElement;\n                    \n                    return previousParent == currentParent;\n                };\n\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {targetEvent: null};\n            \n            options.displayFormat = DISPLAY_FORMAT;\n\n            var position = _mdPanel.newPanelPosition()\n                    .relativeTo(options.targetEvent.currentTarget)\n                    .addPanelPosition(_mdPanel.xPosition.CENTER, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_START, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_END, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_START, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_END, _mdPanel.yPosition.BELOW)\n\n                    .addPanelPosition(_mdPanel.xPosition.CENTER, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_START, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_END, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_START, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_END, _mdPanel.yPosition.ABOVE),\n\n                panelAnimation = $mdPanel.newPanelAnimation()\n                    .openFrom(options.targetEvent.currentTarget)\n                    .closeTo(options.targetEvent.currentTarget)\n                    .withAnimation($mdPanel.animation.SCALE),\n\n                config = {\n                    id: 'mdpDatePicker',\n                    attachTo: angular.element(document.body),\n                    controller:  ['$rootScope', '$scope', '$mdPanel', '$mdMedia', '$timeout', 'currentDate', 'options','mdPanelRef', '$window', DatePickerCtrl],\n                    controllerAs: 'datepicker',\n                    template:   '<md-card class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' + \n                                    '<div layout=\"row\" layout-wrap>' + \n                                        '<div layout=\"column\" layout-align=\"start center\">' +\n                                            '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                                '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                                '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                                            '</md-toolbar>' + \n                                        '</div>' +  \n                                        '<div>' + \n                                            '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                                '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                                    '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                        '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                                    '</div>' +\n                                                '</md-virtual-repeat-container>' +\n                                            '</div>' +\n                                            '<mdp-calendar ng-if=\"!datepicker.selectingYear\" double-click=\"datepicker.confirm\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                            '<md-dialog-actions layout=\"row\">' +\n                                                '<span flex></span>' +\n                                                '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                                '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                            '</md-dialog-actions>' +\n                                        '</div>' + \n                                    '</div>' +\n                                '</md-card>',\n                    openFrom: options.targetEvent,\n                    position: position,\n                    animation: panelAnimation,\n                    locals: {\n                        currentDate: currentDate,\n                        options: options,\n                        onClose: cb\n                    },\n                    clickOutsideToClose: false,\n                    escapeToClose: true,\n                    focusOnOpen: false,\n                    trapFocus: false,\n                    zIndex: 2\n                };\n\n            if (trackedPanels.mdpDatePicker) {\n                // we already have one open, check to see if user has clicked on same source as currently opened panel. If so, close, don't open new.\n                if (sameInitiator(trackedPanels.mdpDatePicker.config.openFrom, options.targetEvent)) {\n                    return trackedPanels.mdpDatePicker.close().then(removePanel);\n                }\n\n                // we already have one open, close it and open new.\n                return trackedPanels.mdpDatePicker.close().then(removePanel).then(openPanel);\n            }\n            \n\n            return openPanel();\n    \n        };\n\n        return datePicker;\n    \n    }];\n});\n    \n    \n\nfunction CalendarCtrl($scope) {\n\tvar self = this;\n\tthis.dow = moment.localeData().firstDayOfWeek();\n\t\n    this.weekDays = [].concat(\n        moment.weekdaysMin().slice(\n            this.dow\n        ),\n        moment.weekdaysMin().slice(\n            0, \n            this.dow\n        )\n    );\n    \n    this.daysInMonth = [];\n    \n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day() - this.dow;\n            \n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n            \n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n \n        return arr;\n    };\n    \n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) && \n            (!this.maxDate || this.maxDate >= day) && \n            (!self.dateFilter || !self.dateFilter(day));\n    };\n    \n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.selectDateDblClick = function(dom) {\n        self.date.date(dom);\n        if (this.doubleClick){\n            this.doubleClick();\n            \n        }\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n    \n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n    \n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    })\n    \n    self.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\",\n            \"doubleClick\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-dblclick=\"calendar.selectDateDblClick(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(value, format) {\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\nfunction minDateValidator(value, format, minDate) {\n    var minDate = moment(minDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n    \n    return !value || \n            angular.isDate(value) || \n            !minDate.isValid() || \n            date.isSameOrAfter(minDate);\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n    var maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n    \n    return !value || \n            angular.isDate(value) || \n            !maxDate.isValid() || \n            date.isSameOrBefore(maxDate);\n}\n\nfunction filterValidator(value, format, filter) {\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n                \n    return !value || \n            angular.isDate(value) || \n            !angular.isFunction(filter) || \n            !filter(date);\n}\n\nfunction requiredValidator(value, ngModel) {\n    return value\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n            \n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\",\n            \"disabled\": \"=?mdpDisabled\"\n        },\n        link: {\n            pre: function(scope, element, attrs, ngModel, $transclude) {\n                \n            },\n            post: function(scope, element, attrs, ngModel, $transclude) {\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n                    \n                $transclude(function(clone) {\n                   inputContainer.append(clone); \n                });  \n                \n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n                \n                scope.type = scope.dateFormat ? \"text\" : \"date\"\n                scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n                scope.model = ngModel;\n                \n                scope.isError = function() {\n                    return !ngModel.$pristine && !!ngModel.$invalid;\n                };\n                \n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && moment(value);\n                    if(date && date.isValid()) \n                        updateInputElement(date.format(scope.dateFormat));\n                    else\n                        updateInputElement(null);\n                });\n                \n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(viewValue, scope.dateFormat);\n                };\n                \n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(viewValue, scope.dateFormat, scope.minDate);\n                };\n                \n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\n                };\n                \n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\n                };\n                \n                ngModel.$validators.required = function(modelValue, viewValue) {\n                    return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n                };\n                \n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = moment(value, scope.dateFormat, true);\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = moment(ngModel.$modelValue);\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n                            \n                            parsed = originalModel;\n                        }\n                        return parsed.toDate(); \n                    } else\n                        return null;\n                });\n                \n                // update input element value\n                function updateInputElement(value) {\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n                \n                function updateDate(date) {\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n                        strValue = value.format(scope.dateFormat);\n    \n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(strValue);\n                    } else {\n                        updateInputElement(date);\n                        ngModel.$setViewValue(date);\n                    }\n                    \n                    if(!ngModel.$pristine && \n                        messages.hasClass(\"md-auto-hide\") && \n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n    \n                    ngModel.$render();\n                }\n                    \n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                \t    minDate: scope.minDate, \n                \t    maxDate: scope.maxDate,\n                \t    dateFilter: scope.dateFilter,\n                \t    targetEvent: ev\n            \t    }, updateDate);\n\n                    angular.element(ev.currentTarget.parentElement).find('input').focus();\n                };\n                \n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewVaue)\n                        updateDate(event.target.value);\n                }\n                \n                inputElement.on(\"reset input blur\", onInputElementEvents);\n                \n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                });\n            }\n        }\n    };\n}]);\n\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n            \n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(viewValue, scope.format);\n            };\n            \n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(viewValue, scope.format, scope.minDate);\n            };\n            \n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\n            };\n            \n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\n            };\n            \n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n            \t    minDate: scope.minDate, \n            \t    maxDate: scope.maxDate,\n            \t    dateFilter: scope.dateFilter,\n            \t    targetEvent: ev\n        \t    }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n            \n            element.on(\"click\", showPicker);\n            \n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n/* global moment, angular */\n\nfunction TimePickerCtrl($rootScope, $scope, $mdDialog, time, autoSwitch, $mdMedia, mdPanelRef, $window) {\n\tvar self = this;\n\n    this._mdPanelRef = mdPanelRef;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = moment(time);\n    this.autoSwitch = !!autoSwitch;\n\n    this.onWindowResize = function() {\n        angular.element($window).off('resize', this.onWindowResize);\n        self.cancel();\n    };\n\n    angular.element($window).on('resize', this.onWindowResize);\n\n    $rootScope.$on('$stateChangeStart', function(){\n        self.cancel();\n    });\n\n    $rootScope.$on('$locationChangeSuccess', function(){\n        self.cancel();\n    });\n    \n    \n    this.clockHours = parseInt(this.time.format(\"h\"));\n    this.clockMinutes = parseInt(this.time.minutes());\n    \n\t$scope.$mdMedia = $mdMedia;\n\t\n\tthis.switchView = function() {\n\t    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n\t};\n    \n\tthis.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n\t};\n\n    this.cleanUpTrackedPanels = function(panelRef) {\n        if (panelRef._$mdPanel._trackedPanels.mdpTimePicker) {\n            delete panelRef._$mdPanel._trackedPanels.mdpTimePicker;\n        }\n    };\n    \n    this.cancel = function() {\n        var panelRef = this._mdPanelRef,\n            self = this;\n\n        panelRef && panelRef.close().then(function() {\n            try {\n                angular.element(panelRef.config.openFrom.currentTarget).focus();\n                self.cleanUpTrackedPanels(panelRef);\n            } catch(e){\n                console.log('Reference not found ' + e);\n            } finally {\n                panelRef.destroy();\n            }\n            \n        });\n    };\n\n    this.confirm = function() {\n        var time = self.time,\n            panelRef = self._mdPanelRef;\n        \n        panelRef && panelRef.close().then(function() {\n            try {\n                angular.element(panelRef.config.openFrom.currentTarget).focus();\n                panelRef.config.locals.onClose(time.toDate());\n                self.cleanUpTrackedPanels(panelRef);\n            } catch(e){ \n                console.log('No close function found.');\n            } finally {\n                \n                panelRef.destroy();    \n            }\n            \n        });\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    var self = this;\n    \n    this.STEP_DEG = 360 / 12;\n    this.steps = [];\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.setTime = function(time, type) {\n        this.selected = time;\n        \n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n        \n    };\n    \n    this.init = function() {\n        self.type = self.type || \"hours\";\n        switch(self.type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = self.time.hours() || 0;\n                if(self.selected > 12) self.selected -= 12;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    this.init();\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n            \n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            }; \n            \n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n            \n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\";\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdPanel\", function($mdPanel) {\n\n        var _mdPanel = $mdPanel,\n\n        timePicker = function(time, options, cb) {\n            var trackedPanels = $mdPanel._trackedPanels,\n                removePanel = function(){\n                   trackedPanels.mdpTimePicker.destroy();\n                    delete trackedPanels.mdpTimePicker;\n                    return;\n                },\n                openPanel = function(){\n                    _mdPanel.open(config);\n                },\n                sameInitiator = function(event1, event2) {\n                    var previousParent = event1.currentTarget.parentElement,\n                        currentParent = event2.currentTarget.parentElement;\n                    \n                    return previousParent == currentParent;\n                };\n\n            if(!angular.isDate(time)) time = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            var position = _mdPanel.newPanelPosition()\n                    .relativeTo(options.targetEvent.currentTarget)\n                    .addPanelPosition(_mdPanel.xPosition.CENTER, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_START, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_END, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_START, _mdPanel.yPosition.BELOW)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_END, _mdPanel.yPosition.BELOW)\n\n                    .addPanelPosition(_mdPanel.xPosition.CENTER, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_START, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.ALIGN_END, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_START, _mdPanel.yPosition.ABOVE)\n                    .addPanelPosition(_mdPanel.xPosition.OFFSET_END, _mdPanel.yPosition.ABOVE),\n\n                panelAnimation = $mdPanel.newPanelAnimation()\n                    .openFrom(options.targetEvent.currentTarget)\n                    .closeTo(options.targetEvent.currentTarget)\n                    .withAnimation($mdPanel.animation.SCALE),\n    \n                config = {\n                    id: 'mdpTimePicker',\n                    attachTo: angular.element(document.body),\n                    controller:  ['$rootScope', '$scope', '$mdPanel', 'time', 'autoSwitch', '$mdMedia', 'mdPanelRef', '$window', TimePickerCtrl],\n                    controllerAs: 'timepicker',\n                    template: '<md-card aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                                '<div layout-gt-xs=\"row\" layout-wrap>' +\n                                    '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                        '<div class=\"mdp-timepicker-selected-time\">' +\n                                            '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:' + \n                                            '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\n                                        '</div>' +\n                                        '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                            '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\n                                            '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\n                                        '</div>' + \n                                    '</md-toolbar>' +\n                                    '<div>' +\n                                        '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n    \t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n    \t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                        '</div>' +\n                                        \n                                        '<md-dialog-actions layout=\"row\">' +\n    \t                                \t'<span flex></span>' +\n                                            '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                            '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                        '</md-dialog-actions>' +\n                                    '</div>' +\n                                '</div>' +\n                            '</md-card>',\n                    openFrom: options.targetEvent,\n                    position: position,\n                    animation: panelAnimation,\n                    locals: {\n                        time: time,\n                        autoSwitch: options.autoSwitch,\n                        onClose: cb\n                    },\n                    skipHide: true,\n                    clickOutsideToClose: false,\n                    escapeToClose: true,\n                    focusOnOpen: false,\n                    trapFocus: false,\n                    zIndex: 2\n                };\n\n            if (trackedPanels.mdpTimePicker) {\n                // we already have one open, check to see if user has clicked on same source as currently opened panel. If so, close, don't open new.\n                if (sameInitiator(trackedPanels.mdpTimePicker.config.openFrom, options.targetEvent)) {\n                    return trackedPanels.mdpTimePicker.close().then(removePanel);\n                }\n\n                // we already have one open, close it and open new.\n                return trackedPanels.mdpTimePicker.close().then(removePanel).then(openPanel);\n            }\n            \n\n            return openPanel();\n\n\n        };\n    \n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n            \n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n                \n            $transclude(function(clone) {\n               inputContainer.append(clone); \n            });\n            \n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n            \n            scope.type = scope.timeFormat ? \"text\" : \"time\"\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch || false;\n            \n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n            \n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && moment(value);\n                if(time && time.isValid()) \n                    updateInputElement(time.format(scope.timeFormat));\n                else\n                    updateInputElement(null);\n            });\n            \n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n            \n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n            \n            ngModel.$parsers.unshift(function(value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n                        \n                        parsed = originalModel;\n                    }\n                    return parsed.toDate(); \n                } else\n                    return null;\n            });\n            \n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n            \n            function updateTime(time) {\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n                    strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n                \n                if(!ngModel.$pristine && \n                    messages.hasClass(\"md-auto-hide\") && \n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n                \n                ngModel.$render();\n            }\n                \n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }, updateTime);\n\n                // TODO: add conditional for focusOpOpen flag.\n                angular.element(ev.currentTarget.parentElement).find('input').focus();\n            };\n            \n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n            \n            inputElement.on(\"reset input blur\", onInputElementEvents);\n            \n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            })\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n            \n            element.on(\"click\", showPicker);\n            \n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n})();"]}