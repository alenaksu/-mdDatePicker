{"version":3,"sources":["mdPickers.min.js"],"names":["TimePickerCtrl","$scope","$mdDialog","currentDate","$mdMedia","self","this","VIEW_HOURS","VIEW_MINUTES","currentView","currentMoment","moment","clockHours","parseInt","format","clockMinutes","minutes","$watch","newValue","oldValue","angular","isDefined","hour","setAM","setPM","cancel","confirm","hide","toDate","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","ngModel","STEP_DEG","steps","selected","CLOCK_TYPES","hours","range","setTimeByDeg","deg","divider","type","setTime","Math","round","getPointerStyle","degrees","-webkit-transform","-ms-transform","transform","time","$setViewValue","$render","init","i","push","$modelValue","DatePickerCtrl","minDate","maxDate","$timeout","subtract","undefined","add","selectingYear","yearItems","currentIndex_","PAGE_SIZE","START","getItemAtIndex","index","getLength","floor","year","selectYear","animate","showYear","yearTopIndex","showCalendar","animating","noop","then","isDisabled","day","testMoment","date","isBefore","isAfter","CalendarCtrl","weekDays","weekdaysMin","getDaysInMonth","days","daysInMonth","firstDay","arr","selectDate","dom","nextMonth","prevMonth","module","directive","$animate","restrict","require","scope","replace","template","controller","controllerAs","link","element","attrs","ctrls","ctrl","container","querySelector","onEvent","event","target","x","offsetWidth","offsetX","y","offsetY","offsetHeight","atan2","PI","on","off","$on","provider","LABEL_OK","LABEL_CANCEL","setOKButtonLabel","label","setCancelButtonLabel","$get","timePicker","targetEvent","isDate","Date","now","show","clickOutsideToClose","locals","datePicker","animElements","map","a","direction","addClass","removeClass","$mdpDatePicker","ev","preventDefault","selectedDate"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\nvar module = angular.module(\"mdPickers\", [\r\n\t\"ngMaterial\",\r\n\t\"ngAnimate\",\r\n\t\"ngAria\"\r\n]); \nfunction TimePickerCtrl($scope, $mdDialog, currentDate, $mdMedia) {\r\n\tvar self = this;\r\n    this.VIEW_HOURS = 1;\r\n    this.VIEW_MINUTES = 2;\r\n    this.currentDate = currentDate;\r\n    this.currentView = this.VIEW_HOURS;\r\n    this.currentMoment = moment(self.currentDate);\r\n    \r\n    this.clockHours = parseInt(this.currentMoment.format(\"h\"));\r\n    this.clockMinutes = parseInt(this.currentMoment.minutes());\r\n\t\r\n    $scope.$watch(function() { return self.clockHours }, function(newValue, oldValue) {\r\n        if(angular.isDefined(oldValue)) {\r\n            if(self.currentMoment.format(\"A\") == \"AM\")\r\n                self.currentMoment.hour(self.clockHours);\r\n            else\r\n                self.currentMoment.hour(self.clockHours < 12 ? self.clockHours + 12 : self.clockHours);\r\n        }\r\n    });\r\n    \r\n     $scope.$watch(function() { return self.clockMinutes }, function(newValue, oldValue) {\r\n        if(angular.isDefined(oldValue)) {\r\n            self.currentMoment.minutes(newValue < 60 ? newValue : 0);\r\n        }\r\n    });\r\n    \r\n\t$scope.$mdMedia = $mdMedia;\r\n    \r\n\tthis.setAM = function() {\r\n        if(self.currentMoment.format(\"A\") == \"PM\")\r\n            self.currentMoment.hour(self.currentMoment.hour() - 12);\r\n\t};\r\n    \r\n    this.setPM = function() {\r\n        if(self.currentMoment.format(\"A\") == \"AM\")\r\n            self.currentMoment.hour(self.currentMoment.hour() + 12);\r\n\t};\r\n    \r\n    this.cancel = function() {\r\n        $mdDialog.cancel();\r\n    };\r\n\r\n    this.confirm = function() {\r\n        $mdDialog.hide(this.currentMoment.toDate());\r\n    };\r\n}\r\n\r\nfunction ClockCtrl($scope) {\r\n    var TYPE_HOURS = \"hours\";\r\n    var TYPE_MINUTES = \"minutes\";\r\n    this.ngModel;\r\n    \r\n    this.STEP_DEG = 360 / 12;\r\n    var self = this;\r\n    this.steps = [];\r\n    this.selected = 0;\r\n    \r\n    this.CLOCK_TYPES = {\r\n        \"hours\": {\r\n            range: 12,\r\n        },\r\n        \"minutes\": {\r\n            range: 60,\r\n        }\r\n    }\r\n    \r\n    this.setTimeByDeg = function(deg) {\r\n        deg = deg >= 360 ? 0 : deg;\r\n        var divider = 0;\r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                divider = 12;\r\n                break;\r\n            case TYPE_MINUTES:\r\n                divider = 60;\r\n                break;\r\n        }  \r\n        \r\n        self.setTime(\r\n            Math.round(divider / 360 * deg)\r\n        );\r\n    };\r\n    \r\n    this.getPointerStyle = function() {\r\n        var divider = 1;\r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                divider = 12;\r\n                break;\r\n            case TYPE_MINUTES:\r\n                divider = 60;\r\n                break;\r\n        }  \r\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\r\n        return { \r\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\r\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\r\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\r\n        }\r\n    };\r\n    \r\n    this.setTime = function(time) {\r\n        this.selected = time;\r\n        self.ngModel.$setViewValue(time);\r\n        self.ngModel.$render();\r\n    };\r\n    \r\n    this.init = function(ngModel, type) {\r\n        self.type = type;\r\n        switch(type) {\r\n            case TYPE_HOURS:\r\n                for(var i = 1; i <= 12; i++)\r\n                    self.steps.push(i);\r\n                    \r\n                break;\r\n            case TYPE_MINUTES:\r\n                for(var i = 5; i <= 55; i+=5)\r\n                    self.steps.push(i);\r\n                self.steps.push(0);\r\n                \r\n                break;\r\n                \r\n        }\r\n        \r\n        self.ngModel = ngModel;\r\n        self.selected = self.ngModel.$modelValue || 0;\r\n    };\r\n}\r\n\r\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        require: ['mdpClock', 'ngModel'],\r\n        scope: {\r\n            'type': '@?'\r\n        },\r\n        replace: true,\r\n        template: '<div class=\"mdp-clock\">' +\r\n                        '<div class=\"mdp-clock-container\">' +\r\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\r\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\r\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\r\n                            '</md-toolbar>' +\r\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\r\n                        '</div>' +\r\n                    '</div>',\r\n        controller: [\"$scope\", ClockCtrl],\r\n        controllerAs: \"clock\",\r\n        link: function(scope, element, attrs, ctrls) {\r\n            var ctrl = ctrls[0],\r\n                ngModel = ctrls[1];\r\n                \r\n            var container = angular.element(element[0].querySelector(\".mdp-clock-container\")),\r\n                pointer = angular.element(element[0].querySelector(\".mdp-pointer\"));\r\n            \r\n            scope.type = scope.type || \"hours\";\r\n            $timeout(function() {\r\n                ctrl.init(ngModel, scope.type);\r\n            });\r\n            \r\n            var onEvent = function(event) {\r\n                if(event.target != container[0]) return;\r\n                var x = ((event.target.offsetWidth / 2) - event.offsetX),\r\n                    y = (event.offsetY - (event.target.offsetHeight / 2));\r\n\r\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\r\n                $timeout(function() {\r\n                    ctrl.setTimeByDeg(deg + 180);\r\n                });\r\n            }; \r\n            \r\n            container.on(\"mousedown\", function() {\r\n               container.on(\"mousemove\", onEvent);\r\n            });\r\n            \r\n            container.on(\"mouseup mouseout\", function() {\r\n               container.off(\"mousemove\", onEvent);\r\n            });\r\n            \r\n            container.on(\"click\", onEvent);\r\n            scope.$on(\"$destroy\", function() {\r\n                container.off(\"click\", onEvent);\r\n                container.off(\"mousemove\", onEvent); \r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\nmodule.provider(\"$mdpTimePicker\", function() {\r\n    var LABEL_OK = \"ok\",\r\n        LABEL_CANCEL = \"cancel\"; \r\n        \r\n    this.setOKButtonLabel = function(label) {\r\n        LABEL_OK = label;\r\n    };\r\n    \r\n    this.setCancelButtonLabel = function(label) {\r\n        LABEL_CANCEL = label;\r\n    };\r\n    \r\n    this.$get = [\"$mdDialog\", function($mdDialog) {\r\n        var timePicker = function(targetEvent, currentDate) {\r\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\r\n    \r\n            return $mdDialog.show({\r\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', TimePickerCtrl],\r\n                controllerAs: 'timepicker',\r\n                clickOutsideToClose: true,\r\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\r\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\r\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\r\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\r\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.currentMoment.format(\"h\") }}</span>:' + \r\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.currentMoment.format(\"mm\") }}</span>' +\r\n                                    '</div>' +\r\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \r\n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'AM\\' }\">AM</span>' +\r\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'PM\\' }\">PM</span>' +\r\n                                    '</div>' + \r\n                                '</md-toolbar>' +\r\n                                '<div>' +\r\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\r\n\t\t\t\t\t\t\t\t\t   '<mdp-clock class=\"mdp-animation-zoom\" ng-model=\"timepicker.clockHours\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\r\n                                       '<mdp-clock class=\"mdp-animation-zoom\" ng-model=\"timepicker.clockMinutes\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\r\n                                    '</div>' +\r\n                                    \r\n                                    '<md-dialog-actions layout-align=\"end center\" layout=\"row\">' +\r\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\r\n                                        '<md-button ng-click=\"timepicker.confirm()\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\r\n                                    '</md-dialog-actions>' +\r\n                                '</div>' +\r\n                            '</md-dialog-content>' +\r\n                        '</md-dialog>',\r\n                targetEvent: targetEvent,\r\n                locals: {\r\n                    currentDate: currentDate\r\n                }\r\n            });\r\n        };\r\n    \r\n        return timePicker;\r\n    }];\r\n});\n/* global = */\r\n\r\nfunction DatePickerCtrl($scope, $mdDialog, currentDate, minDate, maxDate, $mdMedia, $timeout) {\r\n    var self = this;\r\n\r\n    this.currentDate = currentDate;\r\n    this.minDate = (minDate) ? moment(minDate).subtract(1, 'days') : undefined;\r\n    this.maxDate = (maxDate) ? moment(maxDate).add(1, 'days') : undefined;\r\n    this.currentMoment = moment(self.currentDate);\r\n    this.selectingYear = false;\r\n\r\n    $scope.$mdMedia = $mdMedia;\r\n    this.yearItems = {\r\n        currentIndex_: 0,\r\n        PAGE_SIZE: 5,\r\n        START: 1900,\r\n        getItemAtIndex: function (index) {\r\n            if (this.currentIndex_ < index)\r\n                this.currentIndex_ = index;\r\n            return this.START + index;\r\n        },\r\n        getLength: function () {\r\n            return this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2);\r\n        }\r\n    }\r\n\r\n    $scope.year = this.currentMoment.year();\r\n\r\n    this.selectYear = function (year) {\r\n        self.currentMoment.year(year);\r\n        $scope.year = year;\r\n        self.selectingYear = false;\r\n        self.animate();\r\n    };\r\n\r\n    this.showYear = function () {\r\n        self.yearTopIndex = (self.currentMoment.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\r\n        self.yearItems.currentIndex_ = (self.currentMoment.year() - self.yearItems.START) + 1;\r\n        self.selectingYear = true;\r\n    };\r\n\r\n    this.showCalendar = function () {\r\n        self.selectingYear = false;\r\n    };\r\n\r\n    this.cancel = function () {\r\n        $mdDialog.cancel();\r\n    };\r\n\r\n    this.confirm = function () {\r\n        $mdDialog.hide(this.currentMoment.toDate());\r\n    };\r\n\r\n    this.animate = function () {\r\n        self.animating = true;\r\n        $timeout(angular.noop).then(function () {\r\n            self.animating = false;\r\n        })\r\n    };\r\n    this.isDisabled = function (day) {\r\n        var testMoment = moment(this.currentMoment);\r\n        testMoment.date(day);\r\n        if (this.minDate && this.maxDate) {\r\n            if (this.minDate.isBefore(testMoment, 'day') && this.maxDate.isAfter(testMoment, 'day')) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n}\r\n\r\nmodule.provider(\"$mdpDatePicker\", function () {\r\n    var LABEL_OK = \"ok\",\r\n        LABEL_CANCEL = \"cancel\";\r\n\r\n    this.setOKButtonLabel = function (label) {\r\n        LABEL_OK = label;\r\n    };\r\n\r\n    this.setCancelButtonLabel = function (label) {\r\n        LABEL_CANCEL = label;\r\n    };\r\n\r\n    this.$get = [\"$mdDialog\", function ($mdDialog) {\r\n        var datePicker = function (targetEvent, currentDate, minDate, maxDate) {\r\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\r\n\r\n            return $mdDialog.show({\r\n                controller: ['$scope', '$mdDialog', 'currentDate','minDate', 'maxDate', '$mdMedia', '$timeout', DatePickerCtrl],\r\n                controllerAs: 'datepicker',\r\n                clickOutsideToClose: true,\r\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\r\n                '<md-dialog-content layout=\"row\" layout-wrap>' +\r\n                '<div layout=\"column\" layout-align=\"start center\">' +\r\n                '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\r\n                '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\\'YYYY\\') }}</span>' +\r\n                '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\"ddd, MMM DD\") }}</span> ' +\r\n                '</md-toolbar>' +\r\n                '</div>' +\r\n                '<div>' +\r\n                '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" ng-if=\"datepicker.selectingYear\">' +\r\n                '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\r\n                '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\r\n                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\r\n                '</div>' +\r\n                '</md-virtual-repeat-container>' +\r\n                '</div>' +\r\n                '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.currentMoment\"></mdp-calendar>' +\r\n                '<md-dialog-actions layout-align=\"end center\" layout=\"row\">' +\r\n                '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\r\n                '<md-button ng-click=\"datepicker.confirm()\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\r\n                '</md-dialog-actions>' +\r\n                '</div>' +\r\n                '</md-dialog-content>' +\r\n                '</md-dialog>',\r\n                targetEvent: targetEvent,\r\n                locals: {\r\n                    currentDate: currentDate,\r\n                    minDate: minDate,\r\n                    maxDate: maxDate,\r\n                }\r\n            });\r\n        };\r\n\r\n        return datePicker;\r\n    }];\r\n});\r\n\r\nfunction CalendarCtrl($scope) {\r\n    var self = this;\r\n    this.currentMoment;\r\n    this.weekDays = moment.weekdaysMin();\r\n\r\n    this.getDaysInMonth = function () {\r\n        var days = self.currentMoment.daysInMonth(),\r\n            firstDay = moment(self.currentMoment).date(1).day();\r\n\r\n        var arr = [];\r\n        for (var i = 1; i <= (firstDay + days); i++)\r\n            arr.push(i > firstDay ? (i - firstDay) : false);\r\n\r\n        return arr;\r\n    };\r\n\r\n    this.selectDate = function (dom) {\r\n        self.currentMoment.date(dom);\r\n    };\r\n\r\n    this.nextMonth = function () {\r\n        self.currentMoment.add(1, 'months');\r\n    };\r\n\r\n    this.prevMonth = function () {\r\n        self.currentMoment.subtract(1, 'months');\r\n    };\r\n\r\n    this.init = function (date) {\r\n        self.currentMoment = date;\r\n    };\r\n}\r\n\r\nmodule.directive(\"mdpCalendar\", [\"$animate\", function ($animate) {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            \"date\": \"=\"\r\n        },\r\n        template: '<div class=\"mdp-calendar\">' +\r\n        '<div layout=\"row\" layout-align=\"space-between center\">' +\r\n        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_left </md-icon></md-button>' +\r\n        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.currentMoment.format(\"MMMM YYYY\") }}</div>' +\r\n        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_right </md-icon></md-button>' +\r\n        '</div>' +\r\n        '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\r\n        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\r\n        '</div>' +\r\n        '<div layout=\"row\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\">' +\r\n        '<div layout layout-align=\"center center\" ng-repeat-start=\"n in calendar.getDaysInMonth() track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': n === false }\">' +\r\n        '<md-button class=\"md-icon-button md-raised\" aria-label=\"seleziona giorno\" ng-if=\"n !== false\" ng-disabled=\"datepicker.isDisabled(n)\" ng-class=\"{\\'md-accent\\': calendar.currentMoment.date() == n}\" ng-click=\"calendar.selectDate(n)\">{{ n }}</md-button>' +\r\n        '</div>' +\r\n        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\r\n        '</div>' +\r\n        '</div>',\r\n        controller: [\"$scope\", CalendarCtrl],\r\n        controllerAs: \"calendar\",\r\n        link: function (scope, element, attrs, ctrl) {\r\n            var animElements = [\r\n                element[0].querySelector(\".mdp-calendar-week-days\"),\r\n                element[0].querySelector('.mdp-calendar-days'),\r\n                element[0].querySelector('.mdp-calendar-monthyear')\r\n            ];\r\n            animElements = animElements.map(function (a) {\r\n                return angular.element(a);\r\n            });\r\n\r\n            ctrl.init(scope.date);\r\n\r\n            scope.$watch(function () { return scope.date.format(\"YYYYMM\") }, function (newValue, oldValue) {\r\n                var direction = null;\r\n\r\n                if (newValue > oldValue)\r\n                    direction = \"mdp-animate-next\";\r\n                else if (newValue < oldValue)\r\n                    direction = \"mdp-animate-prev\";\r\n\r\n                if (direction) {\r\n                    for (var i in animElements) {\r\n                        animElements[i].addClass(direction);\r\n                        $animate.removeClass(animElements[i], direction);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function ($mdpDatePicker, $timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        require: '?ngModel',\r\n        link: function (scope, element, attrs, ngModel) {\r\n            if ('undefined' !== typeof attrs.type && 'date' === attrs.type && ngModel) {\r\n                angular.element(element).on(\"click\", function (ev) {\r\n                  \t\tev.preventDefault();\r\n                    $mdpDatePicker(ev, ngModel.$modelValue).then(function (selectedDate) {\r\n                        $timeout(function () {\r\n                            ngModel.$setViewValue(moment(selectedDate).format(\"YYYY-MM-DD\"));\r\n                            ngModel.$render();\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    };\r\n}]);\n})();"],"sourceRoot":"/source/"}